This is pdfTeX, Version 3.14159265-2.6-1.40.19 (TeX Live 2018) (preloaded format=pdflatex 2018.5.29)  31 AUG 2022 21:18
entering extended mode
 restricted \write18 enabled.
 file:line:error style messages enabled.
 %&-line parsing enabled.
**master.tex
(./master.tex
LaTeX2e <2018-04-01> patch level 2
Babel <3.18> and hyphenation patterns for 84 language(s) loaded.
(/usr/local/texlive/2018/texmf-dist/tex/latex/memoir/memoir.cls
Document Class: memoir 2018/04/04 v3.7g configurable book, report, article docu
ment class
\onelineskip=\skip41
\lxvchars=\skip42
\xlvchars=\skip43
\@memcnta=\count80
\c@@memmarkcntra=\count81
(/usr/local/texlive/2018/texmf-dist/tex/generic/oberdiek/ifpdf.sty
Package: ifpdf 2017/03/15 v3.2 Provides the ifpdf switch
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/ifetex/ifetex.sty
Package: ifetex 2018/03/31 v1.2a ifetex

(/usr/local/texlive/2018/texmf-dist/tex/plain/ifetex/ifetex.tex))
(/usr/local/texlive/2018/texmf-dist/tex/generic/ifxetex/ifxetex.sty
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/oberdiek/ifluatex.sty
Package: ifluatex 2016/05/16 v1.4 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
)
\stockheight=\skip44
\stockwidth=\skip45
\trimtop=\skip46
\trimedge=\skip47

(/usr/local/texlive/2018/texmf-dist/tex/latex/memoir/mem11.clo
File: mem11.clo 2008/01/30 v0.3 memoir class 11pt size option
)
\binding=\skip48
\spinemargin=\skip49
\foremargin=\skip50
\uppermargin=\skip51
\lowermargin=\skip52
\headdrop=\skip53
\normalrulethickness=\skip54
\mem@maxheadheight=\skip55
\mem@maxfootheight=\skip56
\headwidth=\skip57
\c@storedpagenumber=\count82
\memPD=\dimen102
\m@mabparskip=\skip58
\thanksmarkwidth=\skip59
\thanksmarksep=\skip60
\droptitle=\skip61
\c@book=\count83
\c@part=\count84
\c@chapter=\count85
\c@section=\count86
\c@subsection=\count87
\c@subsubsection=\count88
\c@paragraph=\count89
\c@subparagraph=\count90
\beforechapskip=\skip62
\midchapskip=\skip63
\afterchapskip=\skip64
\chapindent=\skip65
\bottomsectionskip=\skip66
\secindent=\skip67
\beforesecskip=\skip68
\aftersecskip=\skip69
\subsecindent=\skip70
\beforesubsecskip=\skip71
\aftersubsecskip=\skip72
\subsubsecindent=\skip73
\beforesubsubsecskip=\skip74
\aftersubsubsecskip=\skip75
\paraindent=\skip76
\beforeparaskip=\skip77
\afterparaskip=\skip78
\subparaindent=\skip79
\beforesubparaskip=\skip80
\aftersubparaskip=\skip81
\pfbreakskip=\skip82
\c@@ppsavesec=\count91
\c@@ppsaveapp=\count92
\ragrparindent=\dimen103
\everylistparindent=\dimen104
\parsepi=\skip83
\topsepi=\skip84
\itemsepi=\skip85
\parsepii=\skip86
\topsepii=\skip87
\topsepiii=\skip88
\itemsepii=\skip89
\itemsepiii=\skip90
\partopsepii=\skip91
\partopsepiii=\skip92
\m@msavetopsep=\skip93
\m@msavepartopsep=\skip94
\@enLab=\toks14
\abstitleskip=\skip95
\absleftindent=\skip96
\abs@leftindent=\dimen105
\absrightindent=\skip97
\absparindent=\skip98
\absparsep=\skip99
\c@vslineno=\count93
\c@poemline=\count94
\c@modulo@vs=\count95
\c@memfvsline=\count96
\vleftskip=\skip100
\vrightskip=\skip101
\stanzaskip=\skip102
\versewidth=\skip103
\vgap=\skip104
\vindent=\skip105
\vleftmargin=\dimen106
\c@verse=\count97
\c@chrsinstr=\count98
\beforepoemtitleskip=\skip106
\afterpoemtitleskip=\skip107
\c@poem=\count99
\beforePoemTitleskip=\skip108
\midPoemTitleskip=\skip109
\afterPoemTitleskip=\skip110
\col@sep=\dimen107
\extrarowheight=\dimen108
\NC@list=\toks15
\extratabsurround=\skip111
\backup@length=\skip112
\TX@col@width=\dimen109
\TX@old@table=\dimen110
\TX@old@col=\dimen111
\TX@target=\dimen112
\TX@delta=\dimen113
\TX@cols=\count100
\TX@ftn=\toks16
\heavyrulewidth=\dimen114
\lightrulewidth=\dimen115
\cmidrulewidth=\dimen116
\belowrulesep=\dimen117
\belowbottomsep=\dimen118
\aboverulesep=\dimen119
\abovetopsep=\dimen120
\cmidrulesep=\dimen121
\cmidrulekern=\dimen122
\defaultaddspace=\dimen123
\@cmidla=\count101
\@cmidlb=\count102
\@aboverulesep=\dimen124
\@belowrulesep=\dimen125
\@thisruleclass=\count103
\@lastruleclass=\count104
\@thisrulewidth=\dimen126
\ctableftskip=\skip113
\ctabrightskip=\skip114
\abovecolumnspenalty=\count105
\@linestogo=\count106
\@cellstogo=\count107
\@cellsincolumn=\count108
\crtok=\toks17
\@mincolumnwidth=\dimen127
\c@newflo@tctr=\count109
\mem@margin@floatbox=\box26
\@contcwidth=\skip115
\@contindw=\skip116
\abovecaptionskip=\skip117
\belowcaptionskip=\skip118
\subfloattopskip=\skip119
\subfloatcapskip=\skip120
\subfloatcaptopadj=\skip121
\subfloatbottomskip=\skip122
\subfloatlabelskip=\skip123
\subfloatcapmargin=\dimen128
\c@@contsubnum=\count110
\m@mscap@capbox=\box27
\m@mscap@fbox=\box28
\sidecapsep=\dimen129
\sidecapwidth=\dimen130
\m@m@tempdima=\dimen131
\m@mscapraise=\dimen132
\sidecapraise=\dimen133
\m@mscapmainwidth=\dimen134
\m@mscaplkern=\dimen135
\beforeepigraphskip=\skip124
\afterepigraphskip=\skip125
\epigraphwidth=\skip126
\epigraphrule=\skip127
LaTeX Info: Redefining \em on input line 7578.
LaTeX Info: Redefining \emph on input line 7586.
\tocentryskip=\skip128
\tocbaseline=\skip129
\cftparskip=\skip130
\cftbeforebookskip=\skip131
\cftbookindent=\dimen136
\cftbooknumwidth=\dimen137
\cftbeforepartskip=\skip132
\cftpartindent=\skip133
\cftpartnumwidth=\skip134
\cftbeforechapterskip=\skip135
\cftchapterindent=\skip136
\cftchapternumwidth=\skip137
\cftbeforesectionskip=\skip138
\cftsectionindent=\skip139
\cftsectionnumwidth=\skip140
\cftbeforesubsectionskip=\skip141
\cftsubsectionindent=\skip142
\cftsubsectionnumwidth=\skip143
\cftbeforesubsubsectionskip=\skip144
\cftsubsubsectionindent=\skip145
\cftsubsubsectionnumwidth=\skip146
\cftbeforeparagraphskip=\skip147
\cftparagraphindent=\skip148
\cftparagraphnumwidth=\skip149
\cftbeforesubparagraphskip=\skip150
\cftsubparagraphindent=\skip151
\cftsubparagraphnumwidth=\skip152
\prechapterprecisshift=\dimen138
\c@maxsecnumdepth=\count111
\bibindent=\dimen139
\bibitemsep=\skip153
\indexcolsep=\skip154
\indexrule=\skip155
\indexmarkstyle=\toks18
\@indexbox=\insert199
\glossarycolsep=\dimen140
\glossaryrule=\dimen141
\sideparvshift=\skip156
\sideins=\insert198
\sidebartopsep=\skip157
\sidebarhsep=\skip158
\sidebarvsep=\skip159
\sidebarwidth=\skip160
\footmarkwidth=\skip161
\footmarksep=\skip162
\footparindent=\skip163
\footinsdim=\skip164
\footinsv@r=\insert197
\@mpfootinsv@r=\insert196
\m@m@k=\count112
\m@m@h=\dimen142
\m@mipn@skip=\skip165
\sidefootins=\insert195
\sidefootadjust=\skip166
\sidefootheight=\skip167
\sidefoothsep=\skip168
\sidefootvsep=\skip169
\sidefootwidth=\skip170
\m@mdownsf=\skip171
\c@sidefootnote=\count113
\sidefootmarkwidth=\skip172
\sidefootmarksep=\skip173
\sidefootparindent=\skip174
\c@pagenote=\count114
\c@pagenoteshadow=\count115
\mem@pn@lastkern=\skip175
\every@verbatim=\toks19
\afterevery@verbatim=\toks20
\verbatim@line=\toks21
\tab@position=\count116
\verbatim@in@stream=\read1
\verbatimindent=\skip176
\verbatim@out=\write3
\bvboxsep=\skip177
\c@memfbvline=\count117
\c@bvlinectr=\count118
\bvnumlength=\skip178
\fb@frw=\dimen143
\fb@frh=\dimen144
\FrameRule=\dimen145
\FrameSep=\dimen146
\c@cp@cntr=\count119
LaTeX Info: Redefining \: on input line 12100.
LaTeX Info: Redefining \! on input line 12102.
\c@ism@mctr=\count120
\c@xsm@mctr=\count121
\c@csm@mctr=\count122
\c@ksm@mctr=\count123
\c@xksm@mctr=\count124
\c@cksm@mctr=\count125
\c@msm@mctr=\count126
\c@xmsm@mctr=\count127
\c@cmsm@mctr=\count128
\c@bsm@mctr=\count129
\c@workm@mctr=\count130
\c@sheetsequence=\count131
\c@lastsheet=\count132
\c@lastpage=\count133
\c@figure=\count134
\c@lofdepth=\count135
\cftbeforefigureskip=\skip179
\cftfigureindent=\skip180
\cftfigurenumwidth=\skip181
\c@table=\count136
\c@lotdepth=\count137
\cftbeforetableskip=\skip182
\cfttableindent=\skip183
\cfttablenumwidth=\skip184
Package abstract [2008/07/23] emulated by memoir.
Package appendix [2008/07/23] emulated by memoir.
Package array [2016/10/06] emulated by memoir.
Package booktabs [2016/05/16] emulated by memoir.
Package ccaption [2008/07/23] emulated by memoir.
Package changepage [2008/07/23] emulated by memoir.
Package chngcntr [2008/07/23] emulated by memoir.
Package chngpage [2008/07/23] emulated by memoir.
Package crop emulated by memoir.
Package dcolumn [2008/07/23] emulated by memoir.
Package delarray [2014/10/28] emulated by memoir.
Package enumerate [2008/07/23] emulated by memoir.
Package epigraph [2008/07/23] emulated by memoir.
Package ifmtarg [2008/07/23] emulated by memoir.
Package index [2008/07/23] emulated by memoir.
Package makeidx [2008/07/23] emulated by memoir.
Package moreverb [2008/07/23] emulated by memoir.
Package mparhack [2008/07/23] emulated by memoir.
Package needspace [2008/07/23] emulated by memoir.
Package newfile [2008/07/23] emulated by memoir.
Package nextpage [2008/07/23] emulated by memoir.
Package pagenote [2008/07/23] emulated by memoir.
Package parskip [2008/07/23] emulated by memoir.
Package patchcmd [2008/07/23] emulated by memoir.
Package setspace [2008/07/23] emulated by memoir.
Package shortvrb [2008/07/23] emulated by memoir.
Package showidx [2008/07/23] emulated by memoir.
Package tabularx [2016/02/03] emulated by memoir.
Package titleref [2008/07/23] emulated by memoir.
Package titling [2008/07/23] emulated by memoir.
Package tocbibind [2008/07/23] emulated by memoir.
Package tocloft [2008/07/23] emulated by memoir.
Package tocvsec2 [2008/07/23] emulated by memoir.
Package verbatim [2008/07/23] emulated by memoir.
Package verse [2008/07/23] emulated by memoir.
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/mathtools/mathtools.sty
Package: mathtools 2018/01/08 v1.21 mathematical typesetting tools

(/usr/local/texlive/2018/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks22
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/tools/calc.sty
Package: calc 2017/05/25 v4.3 Infix arithmetic (KKT,FJ)
\calc@Acount=\count138
\calc@Bcount=\count139
\calc@Adimen=\dimen147
\calc@Bdimen=\dimen148
\calc@Askip=\skip185
\calc@Bskip=\skip186
LaTeX Info: Redefining \setlength on input line 80.
LaTeX Info: Redefining \addtolength on input line 81.
\calc@Ccount=\count140
\calc@Cskip=\skip187
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/mathtools/mhsetup.sty
Package: mhsetup 2017/03/31 v1.3 programming setup (MH)
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2017/09/02 v2.17a AMS math features
\@mathmargin=\skip188

For additional information on amsmath, use the `?' option.
(/usr/local/texlive/2018/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text

(/usr/local/texlive/2018/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks23
\ex@=\dimen149
))
(/usr/local/texlive/2018/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen150
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 2016/03/08 v2.02 operator names
)
\inf@bad=\count141
LaTeX Info: Redefining \frac on input line 213.
\uproot@=\count142
\leftroot@=\count143
LaTeX Info: Redefining \overline on input line 375.
\classnum@=\count144
\DOTSCASE@=\count145
LaTeX Info: Redefining \ldots on input line 472.
LaTeX Info: Redefining \dots on input line 475.
LaTeX Info: Redefining \cdots on input line 596.
\Mathstrutbox@=\box29
\strutbox@=\box30
\big@size=\dimen151
LaTeX Font Info:    Redeclaring font encoding OML on input line 712.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 713.
\macc@depth=\count146
\c@MaxMatrixCols=\count147
\dotsspace@=\muskip10
\c@parentequation=\count148
\dspbrk@lvl=\count149
\tag@help=\toks24
\row@=\count150
\column@=\count151
\maxfields@=\count152
\andhelp@=\toks25
\eqnshift@=\dimen152
\alignsep@=\dimen153
\tagshift@=\dimen154
\tagwidth@=\dimen155
\totwidth@=\dimen156
\lineht@=\dimen157
\@envbody=\toks26
\multlinegap=\skip189
\multlinetaggap=\skip190
\mathdisplay@stack=\toks27
LaTeX Info: Redefining \[ on input line 2817.
LaTeX Info: Redefining \] on input line 2818.
)
LaTeX Info: Thecontrolsequence`\('isalreadyrobust on input line 129.
LaTeX Info: Thecontrolsequence`\)'isalreadyrobust on input line 129.
LaTeX Info: Thecontrolsequence`\['isalreadyrobust on input line 129.
LaTeX Info: Thecontrolsequence`\]'isalreadyrobust on input line 129.
\g_MT_multlinerow_int=\count153
\l_MT_multwidth_dim=\dimen158
\origjot=\skip191
\l_MT_shortvdotswithinadjustabove_dim=\dimen159
\l_MT_shortvdotswithinadjustbelow_dim=\dimen160
\l_MT_above_intertext_sep=\dimen161
\l_MT_below_intertext_sep=\dimen162
\l_MT_above_shortintertext_sep=\dimen163
\l_MT_below_shortintertext_sep=\dimen164
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/stackengine/stackengine.sty
Package: stackengine 2017/02/13 v4.01\ Stacking text and objects in convenient 
ways

(/usr/local/texlive/2018/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2018/02/11 v2.5e e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count154
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/listofitems/listofitems.sty
(/usr/local/texlive/2018/texmf-dist/tex/generic/listofitems/listofitems.tex
\loi_nestcnt=\count155
)
Package: listofitems 2018/03/13 v1.53 Grab items in lists using user-specified 
sep char (CT)
)
\c@@stackindex=\count156
\@boxshift=\skip192
\stack@tmplength=\skip193
\temp@stkl=\skip194
\@stackedboxwidth=\skip256
\@addedbox=\box31
\@anchorbox=\box32
\stackedbox=\box33
\@centerbox=\box34
\c@ROWcellindex@=\count157
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/was/upgreek.sty
Package: upgreek 2003/02/12 v2.0 (WaS)
Package upgreek Info: Using Euler Roman for upright Greek on input line 31.
\symugrf@m=\mathgroup4
LaTeX Font Info:    Overwriting symbol font `ugrf@m' in version `bold'
(Font)                  U/eur/m/n --> U/eur/b/n on input line 38.
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/adjmulticol/adjmulticol.sty
Package: adjmulticol 2012/01/20 v1.1 Adjusted margins for multicolumn layout

(/usr/local/texlive/2018/texmf-dist/tex/latex/tools/multicol.sty
Package: multicol 2018/04/01 v1.8r multicolumn formatting (FMi)
\c@tracingmulticols=\count158
\mult@box=\box35
\multicol@leftmargin=\dimen165
\c@unbalance=\count159
\c@collectmore=\count160
\doublecol@number=\count161
\multicoltolerance=\count162
\multicolpretolerance=\count163
\full@width=\dimen166
\page@free=\dimen167
\premulticols=\dimen168
\postmulticols=\dimen169
\multicolsep=\skip257
\multicolbaselineskip=\skip258
\partial@page=\box36
\last@line=\box37
\maxbalancingoverflow=\dimen170
\mult@rightbox=\box38
\mult@grightbox=\box39
\mult@gfirstbox=\box40
\mult@firstbox=\box41
\@tempa=\box42
\@tempa=\box43
\@tempa=\box44
\@tempa=\box45
\@tempa=\box46
\@tempa=\box47
\@tempa=\box48
\@tempa=\box49
\@tempa=\box50
\@tempa=\box51
\@tempa=\box52
\@tempa=\box53
\@tempa=\box54
\@tempa=\box55
\@tempa=\box56
\@tempa=\box57
\@tempa=\box58
\c@columnbadness=\count164
\c@finalcolumnbadness=\count165
\last@try=\dimen171
\multicolovershoot=\dimen172
\multicolundershoot=\dimen173
\mult@nat@firstbox=\box59
\colbreak@box=\box60
\mc@col@check@num=\count166
)
\adjmc@inner=\dimen174
\adjmc@outer=\dimen175
\adjmc@saved@leftmargin=\dimen176
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/base/inputenc.sty
Package: inputenc 2018/04/06 v1.3b Input encoding file
\inpenc@prehook=\toks28
\inpenc@posthook=\toks29
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/tools/xspace.sty
Package: xspace 2014/10/28 v1.13 Space after command names (DPC,MH)
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/comment/comment.sty
\CommentStream=\write4

Excluding comment 'comment')
(/usr/local/texlive/2018/texmf-dist/tex/latex/wasysym/wasysym.sty
Package: wasysym 2003/10/30 v2.0 Wasy-2 symbol support package
\symwasy=\mathgroup5
LaTeX Font Info:    Overwriting symbol font `wasy' in version `bold'
(Font)                  U/wasy/m/n --> U/wasy/b/n on input line 90.
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/float/float.sty
Package: float 2001/11/08 v1.3d Float enhancements (AL)
\c@float@type=\count167
\float@exts=\toks30
\float@box=\box61
\@float@everytoks=\toks31
\@floatcapt=\box62
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/base/fontenc.sty
Package: fontenc 2017/04/05 v2.0i Standard LaTeX package

(/usr/local/texlive/2018/texmf-dist/tex/latex/base/t1enc.def
File: t1enc.def 2017/04/05 v2.0i Standard LaTeX file
LaTeX Font Info:    Redeclaring font encoding T1 on input line 48.
))
(/usr/local/texlive/2018/texmf-dist/tex/latex/microtype/microtype.sty
Package: microtype 2018/01/14 v2.7a Micro-typographical refinements (RS)
\MT@toks=\toks32
\MT@count=\count168
LaTeX Info: Redefining \textls on input line 793.
\MT@outer@kern=\dimen177
LaTeX Info: Redefining \textmicrotypecontext on input line 1339.
\MT@listname@count=\count169

(/usr/local/texlive/2018/texmf-dist/tex/latex/microtype/microtype-pdftex.def
File: microtype-pdftex.def 2018/01/14 v2.7a Definitions specific to pdftex (RS)

LaTeX Info: Redefining \lsstyle on input line 913.
LaTeX Info: Redefining \lslig on input line 913.
\MT@outer@space=\skip259
)
Package microtype Info: Loading configuration file microtype.cfg.

(/usr/local/texlive/2018/texmf-dist/tex/latex/microtype/microtype.cfg
File: microtype.cfg 2018/01/14 v2.7a microtype main configuration file (RS)
))
(/usr/local/texlive/2018/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2017/06/01 v1.1a Enhanced LaTeX Graphics (DPC,SPQR)

(/usr/local/texlive/2018/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2017/06/25 v1.2c Standard LaTeX Graphics (DPC,SPQR)

(/usr/local/texlive/2018/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2016/01/03 v1.10 sin cos tan (DPC)
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/graphics-cfg/graphics.cfg
File: graphics.cfg 2016/06/04 v1.11 sample graphics configuration
)
Package graphics Info: Driver file: dvips.def on input line 99.

(/usr/local/texlive/2018/texmf-dist/tex/latex/graphics-def/dvips.def
File: dvips.def 2017/06/20 v3.1d Graphics/color driver for dvips
))
\Gin@req@height=\dimen178
\Gin@req@width=\dimen179
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/xcolor/xcolor.sty
Package: xcolor 2016/05/11 v2.12 LaTeX color extensions (UK)

(/usr/local/texlive/2018/texmf-dist/tex/latex/graphics-cfg/color.cfg
File: color.cfg 2016/01/02 v1.6 sample color configuration
)
Package xcolor Info: Driver file: pdftex.def on input line 225.

(/usr/local/texlive/2018/texmf-dist/tex/latex/graphics-def/pdftex.def
File: pdftex.def 2018/01/08 v1.0l Graphics/color driver for pdftex
)
Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1348.
Package xcolor Info: Model `RGB' extended on input line 1364.
Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1366.
Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1367.
Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1368.
Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1369.
Package xcolor Info: Model `Gray' substituted by `gray' on input line 1370.
Package xcolor Info: Model `wave' substituted by `hsb' on input line 1371.

(/usr/local/texlive/2018/texmf-dist/tex/latex/graphics/dvipsnam.def
File: dvipsnam.def 2016/06/17 v3.0m Driver-dependent file (DPC,SPQR)
))
(/usr/local/texlive/2018/texmf-dist/tex/latex/psnfss/times.sty
Package: times 2005/04/12 PSNFSS-v9.2a (SPQR) 
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/listings/listings.sty
\lst@mode=\count170
\lst@gtempboxa=\box63
\lst@token=\toks33
\lst@length=\count171
\lst@currlwidth=\dimen180
\lst@column=\count172
\lst@pos=\count173
\lst@lostspace=\dimen181
\lst@width=\dimen182
\lst@newlines=\count174
\lst@lineno=\count175
\lst@maxwidth=\dimen183

(/usr/local/texlive/2018/texmf-dist/tex/latex/listings/lstmisc.sty
File: lstmisc.sty 2015/06/04 1.6 (Carsten Heinz)
\c@lstnumber=\count176
\lst@skipnumbers=\count177
\lst@framebox=\box64
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/listings/listings.cfg
File: listings.cfg 2015/06/04 1.6 listings configuration
))
Package: listings 2015/06/04 1.6 (Carsten Heinz)

(/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/frontendlayer/tikz.sty
(/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/basiclayer/pgf.sty
(/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/utilities/pgfrcs.sty
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/utilities/pgfutil-common.te
x
\pgfutil@everybye=\toks34
\pgfutil@tempdima=\dimen184
\pgfutil@tempdimb=\dimen185

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/utilities/pgfutil-common-li
sts.tex))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/utilities/pgfutil-latex.def
\pgfutil@abb=\box65
(/usr/local/texlive/2018/texmf-dist/tex/latex/ms/everyshi.sty
Package: everyshi 2001/05/15 v3.00 EveryShipout Package (MS)
))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/utilities/pgfrcs.code.tex
Package: pgfrcs 2015/08/07 v3.0.1a (rcs-revision 1.31)
))
Package: pgf 2015/08/07 v3.0.1a (rcs-revision 1.15)
(/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/basiclayer/pgfcore.sty
(/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/systemlayer/pgfsys.sty
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/systemlayer/pgfsys.code.tex
Package: pgfsys 2014/07/09 v3.0.1a (rcs-revision 1.48)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex
\pgfkeys@pathtoks=\toks35
\pgfkeys@temptoks=\toks36

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/utilities/pgfkeysfiltered.c
ode.tex
\pgfkeys@tmptoks=\toks37
))
\pgf@x=\dimen186
\pgf@y=\dimen187
\pgf@xa=\dimen188
\pgf@ya=\dimen189
\pgf@xb=\dimen190
\pgf@yb=\dimen191
\pgf@xc=\dimen192
\pgf@yc=\dimen193
\w@pgf@writea=\write5
\r@pgf@reada=\read2
\c@pgf@counta=\count178
\c@pgf@countb=\count179
\c@pgf@countc=\count180
\c@pgf@countd=\count181
\t@pgf@toka=\toks38
\t@pgf@tokb=\toks39
\t@pgf@tokc=\toks40

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/systemlayer/pgf.cfg
File: pgf.cfg 2008/05/14  (rcs-revision 1.7)
)
Driver file for pgf: pgfsys-pdftex.def

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-pdftex.d
ef
File: pgfsys-pdftex.def 2014/10/11  (rcs-revision 1.35)

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-common-p
df.def
File: pgfsys-common-pdf.def 2013/10/10  (rcs-revision 1.13)
)))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/systemlayer/pgfsyssoftpath.
code.tex
File: pgfsyssoftpath.code.tex 2013/09/09  (rcs-revision 1.9)
\pgfsyssoftpath@smallbuffer@items=\count182
\pgfsyssoftpath@bigbuffer@items=\count183
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/systemlayer/pgfsysprotocol.
code.tex
File: pgfsysprotocol.code.tex 2006/10/16  (rcs-revision 1.4)
))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcore.code.tex
Package: pgfcore 2010/04/11 v3.0.1a (rcs-revision 1.7)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathcalc.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathutil.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathparser.code.tex
\pgfmath@dimen=\dimen194
\pgfmath@count=\count184
\pgfmath@box=\box66
\pgfmath@toks=\toks41
\pgfmath@stack@operand=\toks42
\pgfmath@stack@operation=\toks43
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.code.
tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.basic
.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.trigo
nometric.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.rando
m.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.compa
rison.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.base.
code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.round
.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.misc.
code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.integ
erarithmetics.code.tex)))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmathfloat.code.tex
\c@pgfmathroundto@lastzeros=\count185
))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepoints.co
de.tex
File: pgfcorepoints.code.tex 2013/10/07  (rcs-revision 1.27)
\pgf@picminx=\dimen256
\pgf@picmaxx=\dimen257
\pgf@picminy=\dimen258
\pgf@picmaxy=\dimen259
\pgf@pathminx=\dimen260
\pgf@pathmaxx=\dimen261
\pgf@pathminy=\dimen262
\pgf@pathmaxy=\dimen263
\pgf@xx=\dimen264
\pgf@xy=\dimen265
\pgf@yx=\dimen266
\pgf@yy=\dimen267
\pgf@zx=\dimen268
\pgf@zy=\dimen269
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathconst
ruct.code.tex
File: pgfcorepathconstruct.code.tex 2013/10/07  (rcs-revision 1.29)
\pgf@path@lastx=\dimen270
\pgf@path@lasty=\dimen271
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathusage
.code.tex
File: pgfcorepathusage.code.tex 2014/11/02  (rcs-revision 1.24)
\pgf@shorten@end@additional=\dimen272
\pgf@shorten@start@additional=\dimen273
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcorescopes.co
de.tex
File: pgfcorescopes.code.tex 2015/05/08  (rcs-revision 1.46)
\pgfpic=\box67
\pgf@hbox=\box68
\pgf@layerbox@main=\box69
\pgf@picture@serial@count=\count186
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcoregraphicst
ate.code.tex
File: pgfcoregraphicstate.code.tex 2014/11/02  (rcs-revision 1.12)
\pgflinewidth=\dimen274
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretransform
ations.code.tex
File: pgfcoretransformations.code.tex 2015/08/07  (rcs-revision 1.20)
\pgf@pt@x=\dimen275
\pgf@pt@y=\dimen276
\pgf@pt@temp=\dimen277
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcorequick.cod
e.tex
File: pgfcorequick.code.tex 2008/10/09  (rcs-revision 1.3)
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreobjects.c
ode.tex
File: pgfcoreobjects.code.tex 2006/10/11  (rcs-revision 1.2)
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathproce
ssing.code.tex
File: pgfcorepathprocessing.code.tex 2013/09/09  (rcs-revision 1.9)
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcorearrows.co
de.tex
File: pgfcorearrows.code.tex 2015/05/14  (rcs-revision 1.43)
\pgfarrowsep=\dimen278
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreshade.cod
e.tex
File: pgfcoreshade.code.tex 2013/07/15  (rcs-revision 1.15)
\pgf@max=\dimen279
\pgf@sys@shading@range@num=\count187
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreimage.cod
e.tex
File: pgfcoreimage.code.tex 2013/07/15  (rcs-revision 1.18)

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreexternal.
code.tex
File: pgfcoreexternal.code.tex 2014/07/09  (rcs-revision 1.21)
\pgfexternal@startupbox=\box70
))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcorelayers.co
de.tex
File: pgfcorelayers.code.tex 2013/07/18  (rcs-revision 1.7)
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretranspare
ncy.code.tex
File: pgfcoretransparency.code.tex 2013/09/30  (rcs-revision 1.5)
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepatterns.
code.tex
File: pgfcorepatterns.code.tex 2013/11/07  (rcs-revision 1.5)
)))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/modules/pgfmoduleshapes.cod
e.tex
File: pgfmoduleshapes.code.tex 2014/03/21  (rcs-revision 1.35)
\pgfnodeparttextbox=\box71
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/modules/pgfmoduleplot.code.
tex
File: pgfmoduleplot.code.tex 2015/08/03  (rcs-revision 1.13)
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version
-0-65.sty
Package: pgfcomp-version-0-65 2007/07/03 v3.0.1a (rcs-revision 1.7)
\pgf@nodesepstart=\dimen280
\pgf@nodesepend=\dimen281
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version
-1-18.sty
Package: pgfcomp-version-1-18 2007/07/23 v3.0.1a (rcs-revision 1.1)
))
(/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/utilities/pgffor.sty
(/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/utilities/pgfkeys.sty
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex)
) (/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/math/pgfmath.sty
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/utilities/pgffor.code.tex
Package: pgffor 2013/12/13 v3.0.1a (rcs-revision 1.25)

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex)
\pgffor@iter=\dimen282
\pgffor@skip=\dimen283
\pgffor@stack=\toks44
\pgffor@toks=\toks45
))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/frontendlayer/tikz/tikz.cod
e.tex
Package: tikz 2015/08/07 v3.0.1a (rcs-revision 1.151)

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/libraries/pgflibraryplothan
dlers.code.tex
File: pgflibraryplothandlers.code.tex 2013/08/31 v3.0.1a (rcs-revision 1.20)
\pgf@plot@mark@count=\count188
\pgfplotmarksize=\dimen284
)
\tikz@lastx=\dimen285
\tikz@lasty=\dimen286
\tikz@lastxsaved=\dimen287
\tikz@lastysaved=\dimen288
\tikzleveldistance=\dimen289
\tikzsiblingdistance=\dimen290
\tikz@figbox=\box72
\tikz@figbox@bg=\box73
\tikz@tempbox=\box74
\tikz@tempbox@bg=\box75
\tikztreelevel=\count189
\tikznumberofchildren=\count190
\tikznumberofcurrentchild=\count191
\tikz@fig@count=\count192

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/modules/pgfmodulematrix.cod
e.tex
File: pgfmodulematrix.code.tex 2013/09/17  (rcs-revision 1.8)
\pgfmatrixcurrentrow=\count193
\pgfmatrixcurrentcolumn=\count194
\pgf@matrix@numberofcolumns=\count266
)
\tikz@expandcount=\count267

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/frontendlayer/tikz/librarie
s/tikzlibrarytopaths.code.tex
File: tikzlibrarytopaths.code.tex 2008/06/17 v3.0.1a (rcs-revision 1.2)
)))
(/usr/local/texlive/2018/texmf-dist/tex/latex/pgfplots/pgfplots.sty
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplots.revision.tex)
Package: pgfplots 2018/03/28 v1.16 Data Visualization (1.16)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplots.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplotscore.code.tex
\t@pgfplots@toka=\toks46
\t@pgfplots@tokb=\toks47
\t@pgfplots@tokc=\toks48
\pgfplots@tmpa=\dimen291
\c@pgfplots@coordindex=\count268
\c@pgfplots@scanlineindex=\count269

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/sys/pgfplotssysgeneric
.code.tex))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/libs/pgfplotslibrary.c
ode.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/oldpgfcompatib/pgfplot
soldpgfsupp_loader.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/libraries/pgflibraryfpu.cod
e.tex)
Package pgfplots: loading complementary arithmetics for your pgf version...

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/oldpgfcompatib/pgfplot
soldpgfsupp_pgflibraryfpu.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/oldpgfcompatib/pgfplot
soldpgfsupp_pgfmathfloat.code.tex
\c@pgfmathroundto@lastzeros=\count270
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/oldpgfcompatib/pgfplot
soldpgfsupp_leq.code.tex))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/util/pgfplotsutil.code
.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/liststructure/pgfplots
liststructure.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/liststructure/pgfplots
liststructureext.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/liststructure/pgfplots
array.code.tex
\c@pgfplotsarray@tmp=\count271
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/liststructure/pgfplots
matrix.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/numtable/pgfplotstable
shared.code.tex
\c@pgfplotstable@counta=\count272
\t@pgfplotstable@a=\toks49
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/liststructure/pgfplots
deque.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/util/pgfplotsbinary.co
de.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/util/pgfplotsbinary.da
ta.code.tex))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/util/pgfplotsutil.verb
.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/libs/pgflibrarypgfplot
s.surfshading.code.tex
\c@pgfplotslibrarysurf@no=\count273

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/sys/pgflibrarypgfplots
.surfshading.pgfsys-pdftex.def)))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/util/pgfplotscolormap.
code.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/util/pgfplotscolor.cod
e.tex))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplotsstackedplots.c
ode.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplotsplothandlers.c
ode.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplotsmeshplothandle
r.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplotsmeshplotimage.
code.tex)))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplots.scaling.code.
tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplotscoordprocessin
g.code.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplots.errorbars.cod
e.tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplots.markers.code.
tex)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplotsticks.code.tex
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/pgfplots.paths.code.te
x)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/frontendlayer/tikz/librarie
s/tikzlibrarydecorations.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/modules/pgfmoduledecoration
s.code.tex
\pgfdecoratedcompleteddistance=\dimen292
\pgfdecoratedremainingdistance=\dimen293
\pgfdecoratedinputsegmentcompleteddistance=\dimen294
\pgfdecoratedinputsegmentremainingdistance=\dimen295
\pgf@decorate@distancetomove=\dimen296
\pgf@decorate@repeatstate=\count274
\pgfdecorationsegmentamplitude=\dimen297
\pgfdecorationsegmentlength=\dimen298
)
\tikz@lib@dec@box=\box76
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/frontendlayer/tikz/librarie
s/tikzlibrarydecorations.pathmorphing.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/libraries/decorations/pgfli
brarydecorations.pathmorphing.code.tex))
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/frontendlayer/tikz/librarie
s/tikzlibrarydecorations.pathreplacing.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/libraries/decorations/pgfli
brarydecorations.pathreplacing.code.tex))
\pgfplots@numplots=\count275
\pgfplots@xmin@reg=\dimen299
\pgfplots@xmax@reg=\dimen300
\pgfplots@ymin@reg=\dimen301
\pgfplots@ymax@reg=\dimen302
\pgfplots@zmin@reg=\dimen303
\pgfplots@zmax@reg=\dimen304
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/frontendlayer/tikz/librarie
s/tikzlibraryplotmarks.code.tex
File: tikzlibraryplotmarks.code.tex 2008/01/09 v3.0.1a (rcs-revision 1.1)

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/libraries/pgflibraryplotmar
ks.code.tex
File: pgflibraryplotmarks.code.tex 2015/08/03 v3.0.1a (rcs-revision 1.14)
)))
(/usr/local/texlive/2018/texmf-dist/tex/latex/jknapltx/mathrsfs.sty
Package: mathrsfs 1996/01/01 Math RSFS package v1.0 (jk)
\symrsfs=\mathgroup6
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/libs/tikzlibrarypgfplo
ts.external.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/latex/pgf/frontendlayer/libraries/tikzl
ibraryexternal.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/generic/oberdiek/pdftexcmds.sty
Package: pdftexcmds 2018/01/30 v0.27 Utility functions of pdfTeX for LuaTeX (HO
)

(/usr/local/texlive/2018/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2016/05/16 v1.4 Providing info/warning/error messages (HO)
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2016/05/16 v1.23 LaTeX kernel commands for general use (HO)
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgf/frontendlayer/tikz/librarie
s/tikzexternalshared.code.tex))
Package pgfplots external lib: loading complementary code for your PGF version.
..

(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/oldpgfcompatib/pgfplot
soldpgfsupp_pgfcoreexternal.code.tex
File: pgfcoreexternal.code.tex 2015/08/29  (rcs-revision 1.22)
\pgfexternal@startupbox=\box77
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/oldpgfcompatib/pgfplot
soldpgfsupp_tikzlibraryexternal.code.tex
(/usr/local/texlive/2018/texmf-dist/tex/latex/oberdiek/atveryend.sty
Package: atveryend 2016/05/16 v1.9 Hooks at the very end of document (HO)
)
(/usr/local/texlive/2018/texmf-dist/tex/generic/pgfplots/oldpgfcompatib/pgfplot
soldpgfsupp_tikzexternalshared.code.tex)))
\openout5 = `master.auxlock'.


(/usr/local/texlive/2018/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2018/02/06 v6.86b Hypertext links for LaTeX

(/usr/local/texlive/2018/texmf-dist/tex/generic/oberdiek/hobsub-hyperref.sty
Package: hobsub-hyperref 2016/05/16 v1.14 Bundle oberdiek, subset hyperref (HO)


(/usr/local/texlive/2018/texmf-dist/tex/generic/oberdiek/hobsub-generic.sty
Package: hobsub-generic 2016/05/16 v1.14 Bundle oberdiek, subset generic (HO)
Package: hobsub 2016/05/16 v1.14 Construct package bundles (HO)
Package hobsub Info: Skipping package `infwarerr' (already loaded).
Package hobsub Info: Skipping package `ltxcmds' (already loaded).
Package hobsub Info: Skipping package `ifluatex' (already loaded).
Package: ifvtex 2016/05/16 v1.6 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
Package: intcalc 2016/05/16 v1.2 Expandable calculations with integers (HO)
Package hobsub Info: Skipping package `ifpdf' (already loaded).
Package: etexcmds 2016/05/16 v1.6 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2016/05/16 v1.17 Key value parser (HO)
Package: kvdefinekeys 2016/05/16 v1.4 Define keys (HO)
Package hobsub Info: Skipping package `pdftexcmds' (already loaded).
Package: pdfescape 2016/05/16 v1.14 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2016/05/16 v1.4 Expandable calculations on big integers (HO
)
Package: bitset 2016/05/16 v1.2 Handle bit-vector datatype (HO)
Package: uniquecounter 2016/05/16 v1.3 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2016/05/16 v1.5 Let assignment for LaTeX macros (HO)
Package: hopatch 2016/05/16 v1.3 Wrapper for package hooks (HO)
Package: xcolor-patch 2016/05/16 xcolor patch
Package hobsub Info: Skipping package `atveryend' (already loaded).
Package: atbegshi 2016/06/09 v1.18 At begin shipout hook (HO)
Package: refcount 2016/05/16 v3.5 Data extraction from label references (HO)
Package: hycolor 2016/05/16 v1.8 Color options for hyperref/bookmark (HO)
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/oberdiek/auxhook.sty
Package: auxhook 2016/05/16 v1.4 Hooks for auxiliary files (HO)
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2016/05/16 v3.12 Key value format for package options (HO)
)
\@linkdim=\dimen305
\Hy@linkcounter=\count276
\Hy@pagecounter=\count277

(/usr/local/texlive/2018/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2018/02/06 v6.86b Hyperref: PDFDocEncoding definition (HO)
Now handling font encoding PD1 ...
... no UTF-8 mapping file for font encoding PD1
)
\Hy@SavedSpaceFactor=\count278

(/usr/local/texlive/2018/texmf-dist/tex/latex/latexconfig/hyperref.cfg
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `breaklinks' set `true' on input line 4383.
Package hyperref Info: Option `colorlinks' set `true' on input line 4383.
Package hyperref Info: Option `bookmarks' set `true' on input line 4383.
Package hyperref Info: Hyper figures OFF on input line 4509.
Package hyperref Info: Link nesting OFF on input line 4514.
Package hyperref Info: Hyper index ON on input line 4517.
Package hyperref Info: Plain pages OFF on input line 4524.
Package hyperref Info: Backreferencing OFF on input line 4529.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4762.
\c@Hy@tempcnt=\count279

(/usr/local/texlive/2018/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip11
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 5115.
\XeTeXLinkMargin=\dimen306
\Fld@menulength=\count280
\Field@Width=\dimen307
\Fld@charsize=\dimen308
Package hyperref Info: Hyper figures OFF on input line 6369.
Package hyperref Info: Link nesting OFF on input line 6374.
Package hyperref Info: Hyper index ON on input line 6377.
Package hyperref Info: backreferencing OFF on input line 6384.
Package hyperref Info: Link coloring ON on input line 6387.
Package hyperref Info: Link coloring with OCG OFF on input line 6394.
Package hyperref Info: PDF/A mode OFF on input line 6399.
LaTeX Info: Redefining \ref on input line 6439.
LaTeX Info: Redefining \pageref on input line 6443.
\Hy@abspage=\count281
\c@Item=\count282
\c@Hfootnote=\count283
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/memoir/memhfixc.sty
Package: memhfixc 2013/05/30 v1.17 nameref/hyperref package fixes for memoir cl
ass
\c@memhycontfloat=\count284
\c@Hpagenote=\count285
)
Package hyperref Info: Driver (autodetected): hpdftex.

(/usr/local/texlive/2018/texmf-dist/tex/latex/hyperref/hpdftex.def
File: hpdftex.def 2018/02/06 v6.86b Hyperref driver for pdfTeX
\Fld@listcount=\count286
\c@bookmark@seq@number=\count287

(/usr/local/texlive/2018/texmf-dist/tex/latex/oberdiek/rerunfilecheck.sty
Package: rerunfilecheck 2016/05/16 v1.8 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
)
\Hy@SectionHShift=\skip260
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/geometry/geometry.sty
Package: geometry 2018/03/24 v5.7 Page Geometry
\Gm@cnth=\count288
\Gm@cntv=\count289
\c@Gm@tempcnt=\count290
\Gm@bindingoffset=\dimen309
\Gm@wd@mp=\dimen310
\Gm@odd@mp=\dimen311
\Gm@even@mp=\dimen312
\Gm@layoutwidth=\dimen313
\Gm@layoutheight=\dimen314
\Gm@layouthoffset=\dimen315
\Gm@layoutvoffset=\dimen316
\Gm@dimlist=\toks50
)

Package geometry Warning: Over-specification in `h'-direction.
    `width' (597.50787pt) is ignored.


Package geometry Warning: Over-specification in `v'-direction.
    `height' (845.04684pt) is ignored.

(/usr/local/texlive/2018/texmf-dist/tex/latex/tools/bm.sty
Package: bm 2017/01/16 v1.2c Bold Symbol Support (DPC/FMi)
\symboldoperators=\mathgroup7
\symboldletters=\mathgroup8
\symboldsymbols=\mathgroup9
\symboldugrf@m=\mathgroup10
LaTeX Font Info:    Redeclaring math alphabet \mathbf on input line 141.
LaTeX Info: Redefining \bm on input line 207.
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/algorithm2e/algorithm2e.sty
Package: algorithm2e 2017/07/18 v5.2 algorithms environments
\c@AlgoLine=\count291

(/usr/local/texlive/2018/texmf-dist/tex/latex/base/ifthen.sty
Package: ifthen 2014/09/29 v1.1c Standard LaTeX ifthen package (DPC)
)
\algocf@hangindent=\skip261

(/usr/local/texlive/2018/texmf-dist/tex/latex/ifoddpage/ifoddpage.sty
Package: ifoddpage 2016/04/23 v1.1 Conditionals for odd/even page detection
\c@checkoddpage=\count292
LaTeX Info: Redefining \checkoddpage on input line 45.
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/relsize/relsize.sty
Package: relsize 2013/03/29 ver 4.1
)
\skiptotal=\skip262
\skiplinenumber=\skip263
\skiprule=\skip264
\skiphlne=\skip265
\skiptext=\skip266
\skiplength=\skip267
\algomargin=\skip268
\skipalgocfslide=\skip269
\algowidth=\dimen317
\inoutsize=\dimen318
\inoutindent=\dimen319
\interspacetitleruled=\dimen320
\interspacealgoruled=\dimen321
\interspacetitleboxruled=\dimen322
\algocf@ruledwidth=\skip270
\algocf@inoutbox=\box78
\algocf@inputbox=\box79
\AlCapSkip=\skip271
\AlCapHSkip=\skip272
\algoskipindent=\skip273
\algocf@nlbox=\box80
\algocf@hangingbox=\box81
\algocf@untilbox=\box82
\algocf@skipuntil=\skip274
\algocf@capbox=\box83
\algocf@lcaptionbox=\skip275
\algoheightruledefault=\skip276
\algoheightrule=\skip277
\algotitleheightruledefault=\skip278
\algotitleheightrule=\skip279
\c@algocfline=\count293
\c@algocfproc=\count294
\c@algocf=\count295
\algocf@algoframe=\box84
\algocf@algobox=\box85
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/amscls/amsthm.sty
Package: amsthm 2017/10/31 v2.20.4
\thm@style=\toks51
\thm@bodyfont=\toks52
\thm@headfont=\toks53
\thm@notefont=\toks54
\thm@headpunct=\toks55
\thm@preskip=\skip280
\thm@postskip=\skip281
\thm@headsep=\skip282
\dth@everypar=\toks56
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/stmaryrd/stmaryrd.sty
Package: stmaryrd 1994/03/03 St Mary's Road symbol package
\symstmry=\mathgroup11
LaTeX Font Info:    Overwriting symbol font `stmry' in version `bold'
(Font)                  U/stmry/m/n --> U/stmry/b/n on input line 89.
)

Package amsthm Warning: Unknown theoremstyle `proposition' on input line 101.

\c@prop=\count296

Package amsthm Warning: Unknown theoremstyle `proposition' on input line 104.

\c@conj=\count297
\c@definition=\count298
\c@exmp=\count299
\c@theorem=\count300
\c@corollary=\count301
(/usr/local/texlive/2018/texmf-dist/tex/latex/framed/framed.sty
Package: framed 2011/10/22 v 0.96: framed or shaded text with page breaks
\OuterFrameSep=\skip283
\fb@frw=\dimen323
\fb@frh=\dimen324
)
\c@defi/=\count302
\c@examp/=\count303

(/usr/local/texlive/2018/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols

(/usr/local/texlive/2018/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup12
\symAMSb=\mathgroup13
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
)
LaTeX Font Info:    Redeclaring math symbol \boxdot on input line 44.
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/ebproof/ebproof.sty
(/usr/local/texlive/2018/texmf-dist/tex/latex/l3kernel/expl3.sty
Package: expl3 2018/03/05 L3 programming layer (loader) 

(/usr/local/texlive/2018/texmf-dist/tex/latex/l3kernel/expl3-code.tex
Package: expl3 2018/03/05 L3 programming layer (code)
\c_max_int=\count304
\l_tmpa_int=\count305
\l_tmpb_int=\count306
\g_tmpa_int=\count307
\g_tmpb_int=\count308
\g__intarray_font_int=\count309
\g__prg_map_int=\count310
\c_log_iow=\count311
\l_iow_line_count_int=\count312
\l__iow_line_target_int=\count313
\l__iow_one_indent_int=\count314
\l__iow_indent_int=\count315
\c_zero_dim=\dimen325
\c_max_dim=\dimen326
\l_tmpa_dim=\dimen327
\l_tmpb_dim=\dimen328
\g_tmpa_dim=\dimen329
\g_tmpb_dim=\dimen330
\c_zero_skip=\skip284
\c_max_skip=\skip285
\l_tmpa_skip=\skip286
\l_tmpb_skip=\skip287
\g_tmpa_skip=\skip288
\g_tmpb_skip=\skip289
\c_zero_muskip=\muskip12
\c_max_muskip=\muskip13
\l_tmpa_muskip=\muskip14
\l_tmpb_muskip=\muskip15
\g_tmpa_muskip=\muskip16
\g_tmpb_muskip=\muskip17
\l_keys_choice_int=\count316
\c__fp_leading_shift_int=\count317
\c__fp_middle_shift_int=\count318
\c__fp_trailing_shift_int=\count319
\c__fp_big_leading_shift_int=\count320
\c__fp_big_middle_shift_int=\count321
\c__fp_big_trailing_shift_int=\count322
\c__fp_Bigg_leading_shift_int=\count323
\c__fp_Bigg_middle_shift_int=\count324
\c__fp_Bigg_trailing_shift_int=\count325
\c__fp_rand_size_int=\count326
\c__fp_rand_four_int=\count327
\c__fp_rand_eight_int=\count328
\l__sort_length_int=\count329
\l__sort_min_int=\count330
\l__sort_top_int=\count331
\l__sort_max_int=\count332
\l__sort_true_max_int=\count333
\l__sort_block_int=\count334
\l__sort_begin_int=\count335
\l__sort_end_int=\count336
\l__sort_A_int=\count337
\l__sort_B_int=\count338
\l__sort_C_int=\count339
\l__tl_build_start_index_int=\count340
\l__tl_build_index_int=\count341
\l__tl_analysis_normal_int=\count342
\l__tl_analysis_index_int=\count343
\l__tl_analysis_nesting_int=\count344
\l__tl_analysis_type_int=\count345
\l__regex_internal_a_int=\count346
\l__regex_internal_b_int=\count347
\l__regex_internal_c_int=\count348
\l__regex_balance_int=\count349
\l__regex_group_level_int=\count350
\l__regex_mode_int=\count351
\c__regex_cs_in_class_mode_int=\count352
\c__regex_cs_mode_int=\count353
\l__regex_catcodes_int=\count354
\l__regex_default_catcodes_int=\count355
\c__regex_catcode_D_int=\count356
\c__regex_catcode_S_int=\count357
\c__regex_catcode_L_int=\count358
\c__regex_catcode_O_int=\count359
\c__regex_catcode_A_int=\count360
\c__regex_all_catcodes_int=\count361
\l__regex_show_lines_int=\count362
\l__regex_min_state_int=\count363
\l__regex_max_state_int=\count364
\l__regex_left_state_int=\count365
\l__regex_right_state_int=\count366
\l__regex_capturing_group_int=\count367
\l__regex_min_pos_int=\count368
\l__regex_max_pos_int=\count369
\l__regex_curr_pos_int=\count370
\l__regex_start_pos_int=\count371
\l__regex_success_pos_int=\count372
\l__regex_curr_char_int=\count373
\l__regex_curr_catcode_int=\count374
\l__regex_last_char_int=\count375
\l__regex_case_changed_char_int=\count376
\l__regex_curr_state_int=\count377
\l__regex_step_int=\count378
\l__regex_min_active_int=\count379
\l__regex_max_active_int=\count380
\l__regex_replacement_csnames_int=\count381
\l__regex_match_count_int=\count382
\l__regex_min_submatch_int=\count383
\l__regex_submatch_int=\count384
\l__regex_zeroth_submatch_int=\count385
\g__regex_trace_regex_int=\count386
\c_empty_box=\box86
\l_tmpa_box=\box87
\l_tmpb_box=\box88
\g_tmpa_box=\box89
\g_tmpb_box=\box90
\l__box_top_dim=\dimen331
\l__box_bottom_dim=\dimen332
\l__box_left_dim=\dimen333
\l__box_right_dim=\dimen334
\l__box_top_new_dim=\dimen335
\l__box_bottom_new_dim=\dimen336
\l__box_left_new_dim=\dimen337
\l__box_right_new_dim=\dimen338
\l__box_internal_box=\box91
\l__coffin_internal_box=\box92
\l__coffin_internal_dim=\dimen339
\l__coffin_offset_x_dim=\dimen340
\l__coffin_offset_y_dim=\dimen341
\l__coffin_x_dim=\dimen342
\l__coffin_y_dim=\dimen343
\l__coffin_x_prime_dim=\dimen344
\l__coffin_y_prime_dim=\dimen345
\c_empty_coffin=\box93
\l__coffin_aligned_coffin=\box94
\l__coffin_aligned_internal_coffin=\box95
\l_tmpa_coffin=\box96
\l_tmpb_coffin=\box97
\l__coffin_display_coffin=\box98
\l__coffin_display_coord_coffin=\box99
\l__coffin_display_pole_coffin=\box100
\l__coffin_display_offset_dim=\dimen346
\l__coffin_display_x_dim=\dimen347
\l__coffin_display_y_dim=\dimen348
\l__coffin_bounding_shift_dim=\dimen349
\l__coffin_left_corner_dim=\dimen350
\l__coffin_right_corner_dim=\dimen351
\l__coffin_bottom_corner_dim=\dimen352
\l__coffin_top_corner_dim=\dimen353
\l__coffin_scaled_total_height_dim=\dimen354
\l__coffin_scaled_width_dim=\dimen355
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/l3kernel/l3pdfmode.def
File: l3pdfmode.def 2017/03/18 v L3 Experimental driver: PDF mode
\l__driver_color_stack_int=\count387
))
(/usr/local/texlive/2018/texmf-dist/tex/latex/l3packages/xparse/xparse.sty
Package: xparse 2018/02/21 L3 Experimental document command parser
\l__xparse_current_arg_int=\count388
\g__xparse_grabber_int=\count389
\l__xparse_m_args_int=\count390
\l__xparse_mandatory_args_int=\count391
\l__xparse_v_nesting_int=\count392
)
Package: ebproof 2017/05/17 v2.0 EB's proof trees
\l_ebproof_separation_dim=\dimen356
\l_ebproof_rule_margin_dim=\dimen357
\l_ebproof_rule_thickness_dim=\dimen358
\l_ebproof_rule_separation_dim=\dimen359
\l_ebproof_rule_dash_length_dim=\dimen360
\l_ebproof_rule_dash_space_dim=\dimen361
\l_ebproof_label_separation_dim=\dimen362
\l_ebproof_label_axis_dim=\dimen363
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofnewrulestyle with sig. 'mm' on line 78.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofnewstyle with sig. 'mm' on line 140.
.................................................
\l_ebproof_transit_dim=\dimen364
\g_ebproof_level_int=\count393
\g_ebproof_stack_box=\box101
\l_ebproof_a_box=\box102
\l_ebproof_b_box=\box103
\l_ebproof_c_box=\box104
\l_ebproof_d_box=\box105
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofset with sig. 'm' on line 615.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofhypo with sig. 'O{}m' on line 623.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofinfer with sig. 'O{}mO{}m' on line 635.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofellipsis with sig. 'mm' on line 659.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofrewrite with sig. 'm' on line 686.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofdelims with sig. 'mm' on line 712.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofAlter with sig. 'm' on line 722.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofDelims with sig. '' on line 724.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofEllipsis with sig. '' on line 726.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofHypo with sig. '' on line 728.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \ebproofInfer with sig. '' on line 730.
.................................................
.................................................
. LaTeX info: "xparse/define-environment"
. 
. Defining environment 'prooftree' with sig. 'sO{}' on line 763.
.................................................
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/preprint/authblk.sty
Package: authblk 2001/02/27 1.3 (PWD)
\affilsep=\skip290
\@affilsep=\skip291
\c@Maxaffil=\count394
\c@authors=\count395
\c@affil=\count396
) (./defs.tex)
No file master.aux.
\openout1 = `master.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 323.
LaTeX Font Info:    ... okay on input line 323.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 323.
LaTeX Font Info:    ... okay on input line 323.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 323.
LaTeX Font Info:    ... okay on input line 323.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 323.
LaTeX Font Info:    ... okay on input line 323.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 323.
LaTeX Font Info:    ... okay on input line 323.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 323.
LaTeX Font Info:    ... okay on input line 323.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 323.
LaTeX Font Info:    ... okay on input line 323.
LaTeX Font Info:    Try loading font information for T1+ptm on input line 323.
(/usr/local/texlive/2018/texmf-dist/tex/latex/psnfss/t1ptm.fd
File: t1ptm.fd 2001/06/04 font definitions for T1/ptm.
)
LaTeX Info: Redefining \microtypecontext on input line 323.
Package microtype Info: Generating PDF output.
Package microtype Info: Character protrusion enabled (level 2).
Package microtype Info: Using default protrusion set `alltext'.
Package microtype Info: Automatic font expansion enabled (level 2),
(microtype)             stretch: 20, shrink: 20, step: 1, non-selected.
Package microtype Info: Using default expansion set `basictext'.
Package microtype Info: No adjustment of tracking.
Package microtype Info: No adjustment of interword spacing.
Package microtype Info: No adjustment of character kerning.

(/usr/local/texlive/2018/texmf-dist/tex/latex/microtype/mt-ptm.cfg
File: mt-ptm.cfg 2006/04/20 v1.7 microtype config. file: Times (RS)
)
(/usr/local/texlive/2018/texmf-dist/tex/context/base/mkii/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count397
\scratchdimen=\dimen365
\scratchbox=\box106
\nofMPsegments=\count398
\nofMParguments=\count399
\everyMPshowfont=\toks57
\MPscratchCnt=\count400
\MPscratchDim=\dimen366
\MPnumerator=\count401
\makeMPintoPDFobject=\count402
\everyMPtoPDFconversion=\toks58
) (/usr/local/texlive/2018/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2016/05/15 v2.6 Base part for package epstopdf

(/usr/local/texlive/2018/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2016/05/16 v1.2 Manage graphics extensions (HO)
)
Package epstopdf-base Info: Redefining graphics rule for `.eps' on input line 4
38.
Package grfext Info: Graphics extension search list:
(grfext)             [.pdf,.png,.jpg,.mps,.jpeg,.jbig2,.jb2,.PDF,.PNG,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 456.

(/usr/local/texlive/2018/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
\c@lstlisting=\count403

ABD: EveryShipout initializing macros

Package pgfplots Warning: running in backwards compatibility mode (unsuitable t
ick labels; missing features). Consider writing \pgfplotsset{compat=1.16} into 
your preamble.
 on input line 323.

\AtBeginShipoutBox=\box107
Package hyperref Info: Link coloring ON on input line 323.
(/usr/local/texlive/2018/texmf-dist/tex/latex/hyperref/nameref.sty
Package: nameref 2016/05/21 v2.44 Cross-referencing by name of section

(/usr/local/texlive/2018/texmf-dist/tex/generic/oberdiek/gettitlestring.sty
Package: gettitlestring 2016/05/16 v1.5 Cleanup title references (HO)
)
\c@section@level=\count404
)
Redoing nameref's sectioning
Redoing nameref's label
LaTeX Info: Redefining \nameref on input line 323.
LaTeX Info: Redefining \ref on input line 323.
LaTeX Info: Redefining \pageref on input line 323.
LaTeX Info: Redefining \nameref on input line 323.
\@outlinefile=\write6
\openout6 = `master.out'.

*geometry* driver: auto-detecting
*geometry* detected driver: pdftex
*geometry* verbose mode - [ preamble ] result:
* driver: pdftex
* paper: a4paper
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* bindingoffset: 28.45274pt
* modes: twoside 
* h-part:(L,W,R)=(56.9055pt, 455.24413pt, 56.9055pt)
* v-part:(T,H,B)=(71.13188pt, 702.78308pt, 71.13188pt)
* \paperwidth=597.50787pt
* \paperheight=845.04684pt
* \textwidth=455.24413pt
* \textheight=702.78308pt
* \oddsidemargin=13.08826pt
* \evensidemargin=-15.36449pt
* \topmargin=-34.61191pt
* \headheight=13.6pt
* \headsep=19.8738pt
* \topskip=11.0pt
* \footskip=27.46295pt
* \marginparwidth=101.0pt
* \marginparsep=7.0pt
* \columnsep=10.0pt
* \skip\footins=12.0pt plus 4.0pt minus 4.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidetrue
* \@mparswitchtrue
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

(./sections/summary.tex
LaTeX Font Info:    Font shape `T1/ptm/bx/n' in size <14.4> not available
(Font)              Font shape `T1/ptm/b/n' tried instead on input line 1.
LaTeX Font Info:    Try loading font information for T1+phv on input line 1.

(/usr/local/texlive/2018/texmf-dist/tex/latex/psnfss/t1phv.fd
File: t1phv.fd 2001/06/04 scalable font definitions for T1/phv.
)
LaTeX Font Info:    Font shape `T1/phv/bx/n' in size <14.4> not available
(Font)              Font shape `T1/phv/b/n' tried instead on input line 1.
Package microtype Info: Loading generic protrusion settings for font family
(microtype)             `phv' (encoding: T1).
(microtype)             For optimal results, create family-specific settings.
(microtype)             See the microtype manual for details.
LaTeX Font Info:    Font shape `T1/ptm/bx/n' in size <10.95> not available
(Font)              Font shape `T1/ptm/b/n' tried instead on input line 3.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 1 undefined on input line
 3.


Underfull \hbox (badness 10000) in paragraph at lines 3--4

 []


Underfull \hbox (badness 10000) in paragraph at lines 5--6

 []

(/usr/local/texlive/2018/texmf-dist/tex/latex/microtype/mt-cmr.cfg
File: mt-cmr.cfg 2013/05/19 v2.2 microtype config. file: Computer Modern Roman 
(RS)
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/microtype/mt-eur.cfg
File: mt-eur.cfg 2006/07/31 v1.1 microtype config. file: AMS Euler Roman (RS)
)
LaTeX Font Info:    Try loading font information for U+wasy on input line 7.

(/usr/local/texlive/2018/texmf-dist/tex/latex/wasysym/uwasy.fd
File: uwasy.fd 2003/10/30 v2.0 Wasy-2 symbol font definitions
)
LaTeX Font Info:    Try loading font information for U+rsfs on input line 7.

(/usr/local/texlive/2018/texmf-dist/tex/latex/jknapltx/ursfs.fd
File: ursfs.fd 1998/03/24 rsfs font definition file (jk)
)
LaTeX Font Info:    Try loading font information for U+stmry on input line 7.

(/usr/local/texlive/2018/texmf-dist/tex/latex/stmaryrd/Ustmry.fd)
LaTeX Font Info:    Try loading font information for U+msa on input line 7.

(/usr/local/texlive/2018/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/microtype/mt-msa.cfg
File: mt-msa.cfg 2006/02/04 v1.1 microtype config. file: AMS symbols (a) (RS)
)
LaTeX Font Info:    Try loading font information for U+msb on input line 7.

(/usr/local/texlive/2018/texmf-dist/tex/latex/amsfonts/umsb.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/microtype/mt-msb.cfg
File: mt-msb.cfg 2005/06/01 v1.0 microtype config. file: AMS symbols (b) (RS)
)
Underfull \hbox (badness 10000) in paragraph at lines 7--8

 []


Underfull \hbox (badness 10000) in paragraph at lines 9--10

 []


Underfull \hbox (badness 10000) in paragraph at lines 17--18

 []

[1
Non-PDF special ignored!
<special> papersize=597.50787pt,845.04684pt

{/usr/local/texlive/2018/texmf-var/fonts/map/pdftex/updmap/pdftex.map}]

LaTeX Warning: Citation `BaillotEtAl2021' on page 2 undefined on input line 19.


) [2]
LaTeX Font Info:    Font shape `T1/ptm/bx/n' in size <10> not available
(Font)              Font shape `T1/ptm/b/n' tried instead on input line 328.
 [3] [4

]
LaTeX Font Info:    Font shape `T1/phv/bx/n' in size <24.88> not available
(Font)              Font shape `T1/phv/b/n' tried instead on input line 342.
 [5

] (./sections/introduction.tex [6


]
LaTeX Font Info:    Font shape `T1/phv/m/it' in size <14.4> not available
(Font)              Font shape `T1/phv/m/sl' tried instead on input line 21.


LaTeX Warning: Citation `Milner1978' on page 7 undefined on input line 25.


Underfull \hbox (badness 10000) in paragraph at lines 25--26

 []


LaTeX Warning: Citation `HofmannAndJost2003' on page 7 undefined on input line 
27.


LaTeX Warning: Citation `HofmannAndHoffmann2010' on page 7 undefined on input l
ine 27.


LaTeX Warning: Citation `HoffmannEtAl2012' on page 7 undefined on input line 27
.


LaTeX Warning: Citation `LagoGaboardi2012' on page 7 undefined on input line 27
.


LaTeX Warning: Citation `AvanziniLago2017' on page 7 undefined on input line 27
.


LaTeX Warning: Citation `HoffmannShao2015' on page 7 undefined on input line 27
.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 7 undefined on input line
 27.


LaTeX Warning: Citation `BaillotEtAl2021' on page 7 undefined on input line 27.



Underfull \hbox (badness 10000) in paragraph at lines 27--28

 []


LaTeX Warning: Citation `BaillotGhyselen2021' on page 7 undefined on input line
 29.


LaTeX Warning: Citation `BaillotEtAl2021' on page 7 undefined on input line 29.



LaTeX Warning: Citation `Kobayashi1998' on page 7 undefined on input line 29.


LaTeX Warning: Citation `KobayashiEtAl2000' on page 7 undefined on input line 2
9.

[7]

LaTeX Warning: Citation `BaillotGhyselen2021' on page 8 undefined on input line
 32.


Underfull \hbox (badness 10000) in paragraph at lines 32--33

 []


Underfull \hbox (badness 10000) in paragraph at lines 34--35

 []


Underfull \hbox (badness 10000) in paragraph at lines 36--37

 []


LaTeX Warning: Citation `HofmannAndJost2003' on page 8 undefined on input line 
38.


LaTeX Warning: Citation `HofmannAndHoffmann2010' on page 8 undefined on input l
ine 38.


LaTeX Warning: Citation `HoffmannEtAl2012' on page 8 undefined on input line 38
.


LaTeX Warning: Citation `KobayashiEtAl2000' on page 8 undefined on input line 3
8.


LaTeX Warning: Citation `Kobayashi2005' on page 8 undefined on input line 38.


LaTeX Warning: Citation `Lhoussaine2004' on page 8 undefined on input line 38.


LaTeX Warning: Citation `KobayashiEtAl2000' on page 8 undefined on input line 3
8.


Underfull \hbox (badness 10000) in paragraph at lines 38--39

 []

[8]

LaTeX Warning: Citation `Z3' on page 9 undefined on input line 40.


LaTeX Warning: Citation `HughesEtAl1996' on page 9 undefined on input line 47.


LaTeX Warning: Citation `HofmannAndJost2003' on page 9 undefined on input line 
47.


Underfull \hbox (badness 10000) in paragraph at lines 47--48

 []


LaTeX Warning: Citation `HofmannAndHoffmann2010' on page 9 undefined on input l
ine 49.


LaTeX Warning: Citation `HoffmannEtAl2012' on page 9 undefined on input line 49
.


Underfull \hbox (badness 10000) in paragraph at lines 49--50

 []


LaTeX Warning: Citation `DalLagoGaboardi2011' on page 9 undefined on input line
 51.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 9 undefined on input line
 51.


LaTeX Warning: Citation `BaillotEtAl2021' on page 9 undefined on input line 51.



Underfull \hbox (badness 10000) in paragraph at lines 51--52

 []

[9]

LaTeX Warning: Citation `HoffmannShao2015' on page 10 undefined on input line 5
5.


Underfull \hbox (badness 10000) in paragraph at lines 55--56

 []


LaTeX Warning: Citation `DasEtAl2018' on page 10 undefined on input line 57.


Underfull \hbox (badness 10000) in paragraph at lines 57--58

 []


LaTeX Warning: Citation `Kobayashi1998' on page 10 undefined on input line 59.


LaTeX Warning: Citation `SumiiKobayashi1998' on page 10 undefined on input line
 59.


LaTeX Warning: Citation `KobayashiEtAl2000' on page 10 undefined on input line 
59.


Underfull \hbox (badness 10000) in paragraph at lines 59--60

 []


LaTeX Warning: Citation `HughesEtAl1996' on page 10 undefined on input line 61.



LaTeX Warning: Citation `HofmannAndJost2003' on page 10 undefined on input line
 61.


LaTeX Warning: Citation `HofmannAndHoffmann2010' on page 10 undefined on input 
line 61.


LaTeX Warning: Citation `HoffmannEtAl2012' on page 10 undefined on input line 6
1.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 10 undefined on input lin
e 61.


LaTeX Warning: Citation `BaillotEtAl2021' on page 10 undefined on input line 61
.


LaTeX Warning: Citation `DalLagoGaboardi2011' on page 10 undefined on input lin
e 61.


LaTeX Warning: Citation `PresburgerArithmetic' on page 10 undefined on input li
ne 61.


Underfull \hbox (badness 10000) in paragraph at lines 61--62

 []


Underfull \vbox (badness 5711) has occurred while \output is active []

 [10]

LaTeX Warning: Reference `ch:picalc' on page 11 undefined on input line 63.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 11 undefined on input lin
e 63.


LaTeX Warning: Citation `BaillotEtAl2021' on page 11 undefined on input line 63
.


LaTeX Warning: Reference `ch:bgts' on page 11 undefined on input line 63.


LaTeX Warning: Reference `ch:typecheck' on page 11 undefined on input line 63.


LaTeX Warning: Reference `ch:timeinference' on page 11 undefined on input line 
63.


LaTeX Warning: Reference `ch:conclusion' on page 11 undefined on input line 63.


) (./sections/pi_calculus.tex [11] [12

]

Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `\pi' on input line 1.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1.

LaTeX Font Info:    Try loading font information for T1+pcr on input line 14.
(/usr/local/texlive/2018/texmf-dist/tex/latex/psnfss/t1pcr.fd
File: t1pcr.fd 2001/06/04 font definitions for T1/pcr.
)
Package microtype Info: Loading generic protrusion settings for font family
(microtype)             `pcr' (encoding: T1).
(microtype)             For optimal results, create family-specific settings.
(microtype)             See the microtype manual for details.

Underfull \hbox (badness 10000) in paragraph at lines 14--19

 []


LaTeX Warning: Reference `sec:parcomplex' on page 13 undefined on input line 20
.


Underfull \hbox (badness 10000) in paragraph at lines 20--21

 []


LaTeX Warning: Reference `def:structcong1' on page 13 undefined on input line 2
2.


LaTeX Warning: Citation `Milner1993' on page 13 undefined on input line 22.

[13]

LaTeX Warning: Reference `def:canonform1' on page 14 undefined on input line 38
.


LaTeX Warning: Reference `lemma:cannform' on page 14 undefined on input line 38
.


LaTeX Warning: Reference `tab:redurules' on page 14 undefined on input line 57.



LaTeX Warning: Citation `Milner1993' on page 14 undefined on input line 57.


Overfull \hbox (64.42953pt too wide) detected at line 62
[] 
 []


Overfull \hbox (14.08179pt too wide) detected at line 64
[] 
 []


Overfull \hbox (60.78795pt too wide) detected at line 66
[] 
 []


Overfull \hbox (108.64014pt too wide) detected at line 71
[] 
 []


Overfull \hbox (26.25836pt too wide) detected at line 81
[] 
 []


Overfull \hbox (16.55724pt too wide) in paragraph at lines 61--82
 [][] 
 []


LaTeX Warning: Citation `BaillotGhyselen2021' on page 14 undefined on input lin
e 90.


LaTeX Warning: Citation `BaillotEtAl2021' on page 14 undefined on input line 90
.


LaTeX Warning: Citation `DasEtAl2018' on page 14 undefined on input line 90.

[14]

LaTeX Warning: Reference `def:structuralcongruenceanno' on page 15 undefined on
 input line 94.


LaTeX Warning: Reference `def:annotatedcanonical' on page 15 undefined on input
 line 105.

[15]

LaTeX Warning: Reference `tab:redurulesanno' on page 16 undefined on input line
 123.


Underfull \hbox (badness 10000) in paragraph at lines 123--124

 []


Overfull \hbox (203.1395pt too wide) detected at line 129
[] 
 []


Overfull \hbox (123.10251pt too wide) detected at line 131
[] 
 []


Overfull \hbox (60.78795pt too wide) detected at line 136
[] 
 []


Overfull \hbox (108.64014pt too wide) detected at line 138
[] 
 []


Overfull \hbox (26.25836pt too wide) detected at line 143
[] 
 []


LaTeX Warning: Reference `def:bglcsim' on page 16 undefined on input line 150.

[16]

LaTeX Warning: Reference `def:spancomp' on page 17 undefined on input line 162.


) (./sections/constraint_judgements/intro.tex)
(./sections/baillotandghyselen/intro.tex [17] [18

]

LaTeX Warning: Citation `BaillotGhyselen2021' on page 19 undefined on input lin
e 2.


LaTeX Warning: Reference `ch:typecheck' on page 19 undefined on input line 2.


LaTeX Warning: Reference `ch:timeinference' on page 19 undefined on input line 
2.


Underfull \hbox (badness 10000) in paragraph at lines 2--3

 []


Underfull \hbox (badness 10000) in paragraph at lines 4--5

 []

(./sections/baillotandghyselen/indices.tex

LaTeX Warning: Reference `def:indexsubstitution' on page 19 undefined on input 
line 7.


LaTeX Warning: Reference `def:indexconstr' on page 19 undefined on input line 7
.

[19]) (./sections/baillotandghyselen/indices_alternative_formulations.tex
LaTeX Font Info:    Font shape `T1/ptm/bx/n' in size <12> not available
(Font)              Font shape `T1/ptm/b/n' tried instead on input line 1.
LaTeX Font Info:    Font shape `T1/phv/bx/n' in size <12> not available
(Font)              Font shape `T1/phv/b/n' tried instead on input line 1.

[20]

LaTeX Warning: Reference `exmp:judgementsatisfaction' on page 21 undefined on i
nput line 29.


Underfull \hbox (badness 10000) in paragraph at lines 38--41

 []


Overfull \hbox (27.51488pt too wide) detected at line 59
[]
 []

[21]) (./sections/baillotandghyselen/types.tex

LaTeX Warning: Reference `def:typeindexsubstitution' on page 22 undefined on in
put line 8.


Underfull \hbox (badness 10000) in paragraph at lines 6--9

 []


LaTeX Warning: Reference `tab:subtypeSized' on page 22 undefined on input line 
21.


LaTeX Warning: Citation `PierceSangiorgi1996' on page 22 undefined on input lin
e 21.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 22 undefined on input lin
e 21.

[22]
Overfull \hbox (36.32147pt too wide) detected at line 43
[] 
 []


Overfull \hbox (65.20316pt too wide) detected at line 43
[] 
 []


Overfull \hbox (18.72523pt too wide) detected at line 43
[] 
 []


Overfull \hbox (23.52524pt too wide) detected at line 43
[] 
 []


Overfull \hbox (179.29744pt too wide) detected at line 43
[] 
 []


Overfull \hbox (123.00317pt too wide) detected at line 43
[] 
 []


Overfull \hbox (129.57317pt too wide) detected at line 43
[] 
 []


Overfull \hbox (4.93488pt too wide) detected at line 43
[] 
 []


Overfull \hbox (75.33626pt too wide) detected at line 43
[] 
 []


Overfull \hbox (36.32147pt too wide) detected at line 43
[] 
 []


Overfull \hbox (65.20316pt too wide) detected at line 43
[] 
 []


Overfull \hbox (18.72523pt too wide) detected at line 43
[] 
 []


Overfull \hbox (23.52524pt too wide) detected at line 43
[] 
 []


Overfull \hbox (179.29744pt too wide) detected at line 43
[] 
 []


Overfull \hbox (123.00317pt too wide) detected at line 43
[] 
 []


Overfull \hbox (129.57317pt too wide) detected at line 43
[] 
 []


Overfull \hbox (4.93488pt too wide) detected at line 43
[] 
 []


Overfull \hbox (75.33626pt too wide) detected at line 43
[] 
 []


Overfull \hbox (77.20068pt too wide) detected at line 43
[]
 []

) (./sections/baillotandghyselen/typerules.tex

LaTeX Warning: Reference `tab:sizedtypedexpressiontypes' on page 23 undefined o
n input line 3.


Underfull \hbox (badness 10000) in paragraph at lines 3--5

 []


Underfull \vbox (badness 10000) has occurred while \output is active []

 [23]
Overfull \hbox (42.05965pt too wide) detected at line 13
[] 
 []


Overfull \hbox (126.52267pt too wide) detected at line 13
[] 
 []


Overfull \hbox (42.05965pt too wide) detected at line 13
[] 
 []


Overfull \hbox (126.52267pt too wide) detected at line 13
[] 
 []


Overfull \hbox (52.47632pt too wide) detected at line 13
[]
 []


LaTeX Warning: Reference `def:delaysized' on page 24 undefined on input line 19
.


LaTeX Warning: Reference `tab:bgprocesstypingrules' on page 24 undefined on inp
ut line 64.


Underfull \hbox (badness 10000) in paragraph at lines 64--65

 []

[24]

LaTeX Font Warning: Command \tiny invalid in math mode on input line 75.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 75.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 75.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 75.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 75.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 75.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 75.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 75.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 93.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 93.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 93.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 93.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 93.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 93.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 93.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 93.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 100.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 100.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 100.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 100.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 100.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 100.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 100.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 100.


Overfull \hbox (119.73558pt too wide) detected at line 118
[] 
 []


Overfull \hbox (318.73572pt too wide) detected at line 118
[] 
 []


Overfull \hbox (46.44261pt too wide) detected at line 118
[] 
 []


Overfull \hbox (10.16786pt too wide) detected at line 118
[] 
 []


Overfull \hbox (312.98395pt too wide) detected at line 118
[] 
 []


Overfull \hbox (98.39987pt too wide) detected at line 118
[] 
 []


Overfull \hbox (22.10556pt too wide) detected at line 118
[] 
 []


Overfull \hbox (104.5056pt too wide) detected at line 118
[] 
 []


Overfull \hbox (119.73558pt too wide) detected at line 118
[] 
 []


Overfull \hbox (318.73572pt too wide) detected at line 118
[] 
 []


Overfull \hbox (46.44261pt too wide) detected at line 118
[] 
 []


Overfull \hbox (10.16786pt too wide) detected at line 118
[] 
 []


Overfull \hbox (312.98395pt too wide) detected at line 118
[] 
 []


Overfull \hbox (98.39987pt too wide) detected at line 118
[] 
 []


Overfull \hbox (22.10556pt too wide) detected at line 118
[] 
 []


Overfull \hbox (104.5056pt too wide) detected at line 118
[] 
 []


Overfull \hbox (81.23087pt too wide) detected at line 118
[]
 []

) (./sections/baillotandghyselen/examples.tex

LaTeX Warning: Citation `BaillotGhyselen2021' on page 25 undefined on input lin
e 4.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 25 undefined on input lin
e 9.

[25]

LaTeX Warning: Citation `BaillotGhyselen2021' on page 26 undefined on input lin
e 18.

)) (./sections/typecheck/intro.tex [26]

LaTeX Warning: Reference `ch:bgts' on page 27 undefined on input line 2.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 27 undefined on input lin
e 2.


Underfull \hbox (badness 10000) in paragraph at lines 2--9

 []

(./sections/typecheck/aux_functions.tex

LaTeX Warning: Reference `def:timeinvariance' on page 27 undefined on input lin
e 2.


LaTeX Warning: Reference `def:readyfunc' on page 27 undefined on input line 2.


LaTeX Warning: Reference `sec:verifyinglinearjudgements' on page 27 undefined o
n input line 2.

[27

]
Overfull \hbox (23.89742pt too wide) in paragraph at lines 28--30
\T1/ptm/m/n/10.95 (-20) We ex-tend \T1/ptm/m/it/10.95 (-20) ready \T1/ptm/m/n/1
0.95 (-20) to type con-texts such that for $\OML/cmm/m/it/10.95 v \OMS/cmsy/m/n
/10.95 2 []\OT1/cmr/m/n/10.95 (^^@)$ \T1/ptm/m/n/10.95 (-20) we have that $[]\O
T1/cmr/m/n/10.95 (\OML/cmm/m/it/10.95 '; \OT1/cmr/m/n/10.95 ^^H\OML/cmm/m/it/10
.95 ; \OT1/cmr/m/n/10.95 ^^@)(\OML/cmm/m/it/10.95 v\OT1/cmr/m/n/10.95 ) = [](\O
ML/cmm/m/it/10.95 '; \OT1/cmr/m/n/10.95 ^^H\OML/cmm/m/it/10.95 ; \OT1/cmr/m/n/1
0.95 ^^@(\OML/cmm/m/it/10.95 v\OT1/cmr/m/n/10.95 ))$\T1/ptm/m/n/10.95 (-20) .
 []


LaTeX Warning: Reference `def:instantiatef' on page 28 undefined on input line 
68.


LaTeX Warning: Reference `section:typeruless' on page 28 undefined on input lin
e 68.

) (./sections/typecheck/type_rules.tex

LaTeX Warning: Reference `fig:combined_complexity' on page 28 undefined on inpu
t line 7.


LaTeX Warning: Reference `fig:combined_complexity' on page 28 undefined on inpu
t line 7.

(./figures/combined_complexity.tex
\openout5 = `tikz/master-figure0.md5'.

\openout5 = `master.auxlock'.


===== 'mode=convert with system call': Invoking 'pdflatex -halt-on-error -inter
action=batchmode -jobname "tikz/master-figure0" "\def\tikzexternalrealjob{maste
r}\input{master}"' ========
runsystem(pdflatex -halt-on-error -interaction=batchmode -jobname "tikz/master-
figure0" "\def\tikzexternalrealjob{master}\input{master}")...disabled (restrict
ed).

\openout5 = `master.auxlock'.


./figures/combined_complexity.tex:19: Package tikz Error: Sorry, the system cal
l 'pdflatex -halt-on-error -interaction=batchmode -jobname "tikz/master-figure0
" "\def\tikzexternalrealjob{master}\input{master}"' did NOT result in a usable 
output file 'tikz/master-figure0' (expected one of .pdf:.jpg:.jpeg:.png:). Plea
se verify that you have enabled system calls. For pdflatex, this is 'pdflatex -
shell-escape'. Sometimes it is also named 'write 18' or something like that. Or
 maybe the command simply failed? Error messages can be found in 'tikz/master-f
igure0.log'. If you continue now, I'll try to typeset the picture.

See the tikz package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.19 \end{tikzpicture}
                      
This error message was generated by an \errmessage
command, so I can't give any explicit help.
Pretend that you're Hercule Poirot: Examine all clues,
and deduce the truth by order and method.

) [28]

LaTeX Warning: Reference `def:combinedcomp' on page 29 undefined on input line 
31.


LaTeX Warning: Reference `def:combinedcompbasis' on page 29 undefined on input 
line 31.

[29]

LaTeX Warning: Reference `tab:sizedtypedexpressiontypes' on page 30 undefined o
n input line 60.


LaTeX Warning: Reference `tab:sizedprocesstypingrules' on page 30 undefined on 
input line 60.


Underfull \hbox (badness 10000) in paragraph at lines 60--61

 []


Overfull \hbox (52.4973pt too wide) detected at line 171
[] 
 []


Overfull \hbox (6.39368pt too wide) detected at line 171
[] 
 []


Overfull \hbox (165.71167pt too wide) detected at line 171
[] 
 []


Overfull \hbox (145.07631pt too wide) detected at line 171
[] 
 []


Overfull \hbox (160.17453pt too wide) detected at line 171
[] 
 []


Overfull \hbox (27.26932pt too wide) detected at line 171
[] 
 []


Overfull \hbox (37.7862pt too wide) detected at line 171
[] 
 []


Overfull \hbox (52.4973pt too wide) detected at line 171
[] 
 []


Overfull \hbox (6.39368pt too wide) detected at line 171
[] 
 []


Overfull \hbox (165.71167pt too wide) detected at line 171
[] 
 []


Overfull \hbox (145.07631pt too wide) detected at line 171
[] 
 []


Overfull \hbox (160.17453pt too wide) detected at line 171
[] 
 []


Overfull \hbox (27.26932pt too wide) detected at line 171
[] 
 []


Overfull \hbox (37.7862pt too wide) detected at line 171
[] 
 []


Overfull \hbox (13.8276pt too wide) detected at line 171
[]
 []


Underfull \hbox (badness 10000) in paragraph at lines 178--179

 []


LaTeX Warning: Reference `ch:bgts' on page 30 undefined on input line 180.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 30 undefined on input lin
e 180.


Underfull \hbox (badness 10000) in paragraph at lines 180--181

 []

[30]

LaTeX Warning: Citation `Karp1972' on page 31 undefined on input line 182.


LaTeX Warning: Reference `def:3satredu' on page 31 undefined on input line 182.



LaTeX Warning: Reference `lemma:soundtranslation' on page 31 undefined on input
 line 182.


LaTeX Warning: Reference `lemma:npcompletesubst' on page 31 undefined on input 
line 182.

[31]

LaTeX Warning: Citation `BaillotGhyselen2021' on page 32 undefined on input lin
e 202.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 32 undefined on input lin
e 204.

[32]

LaTeX Warning: Reference `lemma:soundtranslation' on page 33 undefined on input
 line 218.


LaTeX Warning: Reference `example:addition' on page 33 undefined on input line 
236.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 249.

./sections/typecheck/type_rules.tex:281: Argument of \ebproof_statement_parse:w
 has an extra }.
<inserted text> 
                \par 
l.281 \end{align*}
                  }
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\varphi ;\cdot ,0\leq 0;\Delta \vdash \asyncoutputch {r}{y}{} \triangleleft \ET
C.
./sections/typecheck/type_rules.tex:281: Paragraph ended before \ebproof_statem
ent_parse:w was complete.
<to be read again> 
                   \par 
l.281 \end{align*}
                  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/type_rules.tex:281: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.281 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/type_rules.tex:281: Extra }, or forgotten $.
<recently read> }
                 
l.281 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/type_rules.tex:281: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/type_rules.tex:281: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/type_rules.tex:281: Package ebproof Error: Missing premiss
 in a proof tree.

See the ebproof package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.281 \end{align*}
                  }
(That was another \errmessage.)

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing \cr inserted.
<inserted text> 
                \cr 
l.281 \end{align*}
                  }
I'm guessing that you meant to end an alignment here.

./sections/typecheck/type_rules.tex:281: Missing { inserted.
<inserted text> 
                {
l.281 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/type_rules.tex:281: Missing { inserted.
<inserted text> 
                {
l.281 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/type_rules.tex:281: Extra }, or forgotten $.
<recently read> }
                 
l.281 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
<argument> ...r}{y}{} \triangleleft \{j\}} \infer 
                                                  0{ \begin {matrix} \varphi...
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
<argument> ... 1/j,l+1/l\} \end {matrix} } \infer 
                                                  1{\varphi ;\cdot ,1\leq j;...
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
<argument> ...\triangleleft \{j\monus 1\}} \infer 
                                                  1{\varphi ;\cdot ,1\leq j;...
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
<argument> ..., r}{}} \triangleleft \{j\}} \infer 
                                                  2{\varphi ;\cdot ;\Delta \...
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
<argument> ...,r}{}}} \triangleleft \{j\}} \infer 
                                                  1{\cdot ;\cdot ;\Gamma \vd...
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/type_rules.tex:281: LaTeX Error: \begin{align*} on input l
ine 254 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.281 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.281 \end{align*}
                  }
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.


Overfull \hbox (965.5253pt too wide) detected at line 281
\OT1/cmr/m/n/10 0[]1[]1[]2[]1[]
 []

[33]
./sections/typecheck/type_rules.tex:281: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.281 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/type_rules.tex:281: Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.281 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/type_rules.tex:281: Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.281 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/type_rules.tex:281: Misplaced \cr.
\measure@ ...olumn@ \z@ \add@amps \maxfields@ \cr 
                                                  }}\restorecounters@ \ifodd...
l.281 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/type_rules.tex:281: Extra }, or forgotten \endgroup.
\measure@ ...umn@ \z@ \add@amps \maxfields@ \cr }}
                                                  \restorecounters@ \ifodd \...
l.281 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/type_rules.tex:281: Missing number, treated as zero.
<to be read again> 
                   =
l.281 \end{align*}
                  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/type_rules.tex:281: Missing number, treated as zero.
<to be read again> 
                   \global 
l.281 \end{align*}
                  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/type_rules.tex:281: Argument of \ebproof_statement_parse:w
 has an extra }.
<inserted text> 
                \par 
l.281 \end{align*}
                  }
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\varphi ;\cdot ,0\leq 0;\Delta \vdash \asyncoutputch {r}{y}{} \triangleleft \ET
C.
./sections/typecheck/type_rules.tex:281: Paragraph ended before \ebproof_statem
ent_parse:w was complete.
<to be read again> 
                   \par 
l.281 \end{align*}
                  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/type_rules.tex:281: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.281 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/type_rules.tex:281: Extra }, or forgotten $.
<recently read> }
                 
l.281 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/type_rules.tex:281: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/type_rules.tex:281: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing \cr inserted.
<inserted text> 
                \cr 
l.281 \end{align*}
                  }
I'm guessing that you meant to end an alignment here.

./sections/typecheck/type_rules.tex:281: Missing { inserted.
<inserted text> 
                {
l.281 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/type_rules.tex:281: Missing { inserted.
<inserted text> 
                {
l.281 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/type_rules.tex:281: Extra }, or forgotten $.
<recently read> }
                 
l.281 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
<argument> ...r}{y}{} \triangleleft \{j\}} \infer 
                                                  0{ \begin {matrix} \varphi...
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
<argument> ... 1/j,l+1/l\} \end {matrix} } \infer 
                                                  1{\varphi ;\cdot ,1\leq j;...
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/type_rules.tex:281: Extra }, or forgotten $.
<argument> ...y, r}{} \triangleleft \{j\monus 1\}}
                                                   \infer 1{\varphi ;\cdot ,...
l.281 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
<argument> ...\triangleleft \{j\monus 1\}} \infer 
                                                  1{\varphi ;\cdot ,1\leq j;...
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
<argument> ..., r}{}} \triangleleft \{j\}} \infer 
                                                  2{\varphi ;\cdot ;\Delta \...
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/type_rules.tex:281: Undefined control sequence.
<argument> ...,r}{}}} \triangleleft \{j\}} \infer 
                                                  1{\cdot ;\cdot ;\Gamma \vd...
l.281 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/type_rules.tex:281: LaTeX Error: \begin{document} ended by
 \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.281 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Missing } inserted.
<inserted text> 
                }
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Extra \endgroup.
<recently read> \endgroup 
                          
l.281 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/type_rules.tex:281: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.281 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/type_rules.tex:281: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.281 \end{align*}
                  }
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (675.9534pt too wide) in paragraph at lines 281--281
\OT1/cmr/m/n/10.95 ^^A\OML/cmm/m/it/10.95 ; z \OT1/cmr/m/n/10.95 : [][0\OML/cmm
/m/it/10.95 ; j[]\OT1/cmr/m/n/10.95 1] \OMS/cmsy/m/n/10.95 ` [] h\OML/cmm/m/it/
10.95 z; s\OT1/cmr/m/n/10.95 (\OML/cmm/m/it/10.95 y\OT1/cmr/m/n/10.95 )\OML/cmm
/m/it/10.95 ; r\OMS/cmsy/m/n/10.95 i[] \OML/cmm/m/it/10.95 / \OMS/cmsy/m/n/10.9
5 f\OML/cmm/m/it/10.95 j[]\OT1/cmr/m/n/10.95 1\OMS/cmsy/m/n/10.95 g\OT1/cmr/m/n
/10.95 1[]2[]1[]$ 
 []

./sections/typecheck/type_rules.tex:281: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.281 \end{align*}
                  }
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/typecheck/type_rules.tex:281: Too many }'s.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.281 \end{align*}
                  }
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/typecheck/type_rules.tex:281: LaTeX Error: \begin{document} ended by
 \end{align*}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.281 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/type_rules.tex:281: Missing $ inserted.
<inserted text> 
                $
l.281 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/type_rules.tex:281: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.281 \end{align*}
                  }
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/typecheck/type_rules.tex:281: Extra \endgroup.
<recently read> \endgroup 
                          
l.281 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/type_rules.tex:281: Too many }'s.
l.281 \end{align*}}
                   
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/typecheck/type_rules.tex:283: LaTeX Error: \begin{document} ended by
 \end{examp/}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.283 \end{examp}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/type_rules.tex:283: Extra \endgroup.
<recently read> \endgroup 
                          
l.283 \end{examp}
                 
Things are pretty mixed up, but I think the worst is over.


./sections/typecheck/type_rules.tex:283: LaTeX Error: \begin{document} ended by
 \end{examp}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.283 \end{examp}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/type_rules.tex:283: Extra \endgroup.
<recently read> \endgroup 
                          
l.283 \end{examp}
                 
Things are pretty mixed up, but I think the worst is over.

) (./sections/typecheck/soundness.tex

LaTeX Warning: Reference `section:typeruless' on page 34 undefined on input lin
e 2.


LaTeX Warning: Reference `ch:bgts' on page 34 undefined on input line 5.


Underfull \hbox (badness 10000) in paragraph at lines 5--6

 []


LaTeX Warning: Citation `BaillotGhyselen2021' on page 34 undefined on input lin
e 7.


Overfull \hbox (28.10974pt too wide) detected at line 10
[] 
 []


Overfull \hbox (28.10974pt too wide) detected at line 10
[] 
 []

[34]

LaTeX Warning: Reference `def:delayy' on page 35 undefined on input line 11.


LaTeX Warning: Reference `fig:srnecess' on page 35 undefined on input line 23.


Underfull \hbox (badness 10000) in paragraph at lines 23--24

 []

(./figures/intersection_figure.tex
\openout5 = `tikz/master-figure1.md5'.

\openout5 = `master.auxlock'.


===== 'mode=convert with system call': Invoking 'pdflatex -halt-on-error -inter
action=batchmode -jobname "tikz/master-figure1" "\def\tikzexternalrealjob{maste
r}\input{master}"' ========
runsystem(pdflatex -halt-on-error -interaction=batchmode -jobname "tikz/master-
figure1" "\def\tikzexternalrealjob{master}\input{master}")...disabled (restrict
ed).

\openout5 = `master.auxlock'.


./figures/intersection_figure.tex:19: Package tikz Error: Sorry, the system cal
l 'pdflatex -halt-on-error -interaction=batchmode -jobname "tikz/master-figure1
" "\def\tikzexternalrealjob{master}\input{master}"' did NOT result in a usable 
output file 'tikz/master-figure1' (expected one of .pdf:.jpg:.jpeg:.png:). Plea
se verify that you have enabled system calls. For pdflatex, this is 'pdflatex -
shell-escape'. Sometimes it is also named 'write 18' or something like that. Or
 maybe the command simply failed? Error messages can be found in 'tikz/master-f
igure1.log'. If you continue now, I'll try to typeset the picture.

See the tikz package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.19     \end{tikzpicture}
                          
(That was another \errmessage.)


Overfull \hbox (10.41383pt too wide) in paragraph at lines 2--20
[][] 
 []

\openout5 = `tikz/master-figure2.md5'.

\openout5 = `master.auxlock'.

===== 'mode=convert with system call': Invoking 'pdflatex -halt-on-error -inter
action=batchmode -jobname "tikz/master-figure2" "\def\tikzexternalrealjob{maste
r}\input{master}"' ========
runsystem(pdflatex -halt-on-error -interaction=batchmode -jobname "tikz/master-
figure2" "\def\tikzexternalrealjob{master}\input{master}")...disabled (restrict
ed).

\openout5 = `master.auxlock'.


./figures/intersection_figure.tex:39: Package tikz Error: Sorry, the system cal
l 'pdflatex -halt-on-error -interaction=batchmode -jobname "tikz/master-figure2
" "\def\tikzexternalrealjob{master}\input{master}"' did NOT result in a usable 
output file 'tikz/master-figure2' (expected one of .pdf:.jpg:.jpeg:.png:). Plea
se verify that you have enabled system calls. For pdflatex, this is 'pdflatex -
shell-escape'. Sometimes it is also named 'write 18' or something like that. Or
 maybe the command simply failed? Error messages can be found in 'tikz/master-f
igure2.log'. If you continue now, I'll try to typeset the picture.

See the tikz package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.39     \end{tikzpicture}
                          
(That was another \errmessage.)


Overfull \hbox (10.41383pt too wide) in paragraph at lines 22--40
[][] 
 []

)

LaTeX Warning: Reference `lemma:delayingg' on page 35 undefined on input line 2
40.

[35]

LaTeX Warning: Reference `app:sizedtypesoundness' on page 36 undefined on input
 line 256.


LaTeX Warning: Reference `lemma:weakening' on page 36 undefined on input line 2
77.


LaTeX Warning: Reference `lemma:strengthening' on page 36 undefined on input li
ne 277.

[36]

LaTeX Warning: Reference `lemma:isbg' on page 37 undefined on input line 314.

[37]

LaTeX Warning: Reference `lemma:basisdefer' on page 38 undefined on input line 
359.


LaTeX Warning: Reference `lemma:susumedefer' on page 38 undefined on input line
 376.


LaTeX Warning: Reference `lemma:substibg' on page 38 undefined on input line 38
8.


LaTeX Warning: Reference `lemma:scbg' on page 38 undefined on input line 388.


Underfull \hbox (badness 10000) in paragraph at lines 388--389

 []

[38]

LaTeX Warning: Reference `app:sizedtypesoundness' on page 39 undefined on input
 line 395.


LaTeX Warning: Reference `app:sizedtypesoundness' on page 39 undefined on input
 line 445.


LaTeX Warning: Reference `theorem:srbg' on page 39 undefined on input line 551.


LaTeX Font Info:    Font shape `T1/ptm/bx/sc' in size <10.95> not available
(Font)              Font shape `T1/ptm/b/sc' tried instead on input line 557.

Package ebproof Warning: \Infer is deprecated, use \infer instead on input line
 605.

./sections/typecheck/soundness.tex:605: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.605     \end{align*}
                      }
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _a
./sections/typecheck/soundness.tex:605: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.605     \end{align*}
                      }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/soundness.tex:605: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.605     \end{align*}
                      }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:605: Extra }, or forgotten $.
<recently read> }
                 
l.605     \end{align*}
                      }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:605: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:605: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing \cr inserted.
<inserted text> 
                \cr 
l.605     \end{align*}
                      }
I'm guessing that you meant to end an alignment here.

./sections/typecheck/soundness.tex:605: Missing { inserted.
<inserted text> 
                {
l.605     \end{align*}
                      }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:605: Missing { inserted.
<inserted text> 
                {
l.605     \end{align*}
                      }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:605: Extra }, or forgotten $.
<recently read> }
                 
l.605     \end{align*}
                      }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _a} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...}^\sigma _K(\widetilde {T})} \Infer 
                                                  0{\texttt {in}\in \sigma }...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...r 0{\texttt {in}\in \sigma } \Infer 
                                                  0{\pi _P} \Infer 1{\varphi...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...in \sigma } \Infer 0{\pi _P} \Infer 
                                                  1{\varphi ,\widetilde {i};...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...dash P\triangleleft \kappa } \Infer 
                                                  0{\varphi ,\widetilde {i};...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...};\Phi \vDash \kappa \leq K} \Infer 
                                                  4{\varphi ;\Phi ;\downarro...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...{P} \triangleleft \{I - n\}} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/soundness.tex:605: LaTeX Error: \begin{align*} on input li
ne 561 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.605     \end{align*}
                      }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.605     \end{align*}
                      }
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.


Overfull \hbox (117.58736pt too wide) detected at line 605
\OT1/cmr/m/n/7 1[]0[]0[]1[]0[]4[]1[]
 []

./sections/typecheck/soundness.tex:605: Misplaced alignment tab character &.
<recently read> &
                 
l.605     \end{align*}
                      }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:605: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.605     \end{align*}
                      }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:605: Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.605     \end{align*}
                      }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:605: Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.605     \end{align*}
                      }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:605: Misplaced \cr.
\measure@ ...olumn@ \z@ \add@amps \maxfields@ \cr 
                                                  }}\restorecounters@ \ifodd...
l.605     \end{align*}
                      }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:605: Extra }, or forgotten \endgroup.
\measure@ ...umn@ \z@ \add@amps \maxfields@ \cr }}
                                                  \restorecounters@ \ifodd \...
l.605     \end{align*}
                      }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:605: Missing number, treated as zero.
<to be read again> 
                   =
l.605     \end{align*}
                      }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/soundness.tex:605: Missing number, treated as zero.
<to be read again> 
                   \global 
l.605     \end{align*}
                      }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/soundness.tex:605: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.605     \end{align*}
                      }
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _a
./sections/typecheck/soundness.tex:605: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.605     \end{align*}
                      }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/soundness.tex:605: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.605     \end{align*}
                      }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:605: Extra }, or forgotten $.
<recently read> }
                 
l.605     \end{align*}
                      }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:605: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:605: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing \cr inserted.
<inserted text> 
                \cr 
l.605     \end{align*}
                      }
I'm guessing that you meant to end an alignment here.

./sections/typecheck/soundness.tex:605: Missing { inserted.
<inserted text> 
                {
l.605     \end{align*}
                      }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:605: Missing { inserted.
<inserted text> 
                {
l.605     \end{align*}
                      }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:605: Extra }, or forgotten $.
<recently read> }
                 
l.605     \end{align*}
                      }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _a} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:605: Extra }, or forgotten $.
<argument> ...tt {serv}^\sigma _K(\widetilde {T})}
                                                   \Infer 0{\texttt {in}\in ...
l.605     \end{align*}
                      }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...}^\sigma _K(\widetilde {T})} \Infer 
                                                  0{\texttt {in}\in \sigma }...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...r 0{\texttt {in}\in \sigma } \Infer 
                                                  0{\pi _P} \Infer 1{\varphi...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...in \sigma } \Infer 0{\pi _P} \Infer 
                                                  1{\varphi ,\widetilde {i};...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...dash P\triangleleft \kappa } \Infer 
                                                  0{\varphi ,\widetilde {i};...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...};\Phi \vDash \kappa \leq K} \Infer 
                                                  4{\varphi ;\Phi ;\downarro...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:605: Undefined control sequence.
<argument> ...{P} \triangleleft \{I - n\}} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.605     \end{align*}
                      }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/soundness.tex:605: LaTeX Error: \begin{theorem} on input l
ine 553 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.605     \end{align*}
                      }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Missing } inserted.
<inserted text> 
                }
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Misplaced alignment tab character &.
<recently read> &
                 
l.605     \end{align*}
                      }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:605: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.605     \end{align*}
                      }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:605: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.605     \end{align*}
                      }
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (283.69011pt too wide) in paragraph at lines 605--605
[]\T1/ptm/m/n/10.95 (-20) 1$\OML/cmm/m/it/10.95 '\OT1/cmr/m/n/10.95 ; ^^H; \OMS
/cmsy/m/n/10.95 #[]   \OT1/cmr/m/n/10.95 ^^@ \OMS/cmsy/m/n/10.95 ` \OML/cmm/m/i
t/10.95 a \OT1/cmr/m/n/10.95 : \OMS/cmsy/m/n/10.95 8[][]\OML/cmm/m/it/10.95 :[]
[]\OT1/cmr/m/n/10.95 ([])0[]0[]1[]0[]4[]1[]$ 
 []


Overfull \hbox (119.62476pt too wide) in paragraph at lines 605--605
[] 
 []

./sections/typecheck/soundness.tex:605: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.605     \end{align*}
                      }
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/typecheck/soundness.tex:605: Too many }'s.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.605     \end{align*}
                      }
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/typecheck/soundness.tex:605: LaTeX Error: \begin{document} ended by 
\end{align*}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.605     \end{align*}
                      }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:605: Missing $ inserted.
<inserted text> 
                $
l.605     \end{align*}
                      }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:605: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.605     \end{align*}
                      }
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/typecheck/soundness.tex:605: Extra \endgroup.
<recently read> \endgroup 
                          
l.605     \end{align*}
                      }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/soundness.tex:605: Too many }'s.
l.605     \end{align*}}
                       
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


LaTeX Warning: Reference `lemma:weakening' on page 39 undefined on input line 6
10.


LaTeX Warning: Reference `lemma:weakening' on page 39 undefined on input line 6
10.


LaTeX Warning: Reference `lemma:substibg' on page 39 undefined on input line 61
0.


LaTeX Warning: Reference `lemma:isbg' on page 39 undefined on input line 610.


LaTeX Warning: Reference `lemma:delayingg' on page 39 undefined on input line 6
12.


LaTeX Warning: Reference `lemma:isbg' on page 39 undefined on input line 612.

[39]

LaTeX Warning: Reference `lemma:isbg' on page 40 undefined on input line 617.


LaTeX Warning: Reference `lemma:weakening' on page 40 undefined on input line 6
17.


LaTeX Warning: Reference `lemma:substibg' on page 40 undefined on input line 61
7.


LaTeX Warning: Reference `lemma:delayingg' on page 40 undefined on input line 6
17.


LaTeX Warning: Reference `lemma:isbg' on page 40 undefined on input line 617.


./sections/typecheck/soundness.tex:704: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.704     \item[$\runa{PR-comm}$]
                                  We have the reduction $n : \inputch{a}{\wi...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 704
[][]
 []

./sections/typecheck/soundness.tex:741: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.741     \end{align*}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _a
./sections/typecheck/soundness.tex:741: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.741     \end{align*}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/soundness.tex:741: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.741     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:741: Extra }, or forgotten $.
<recently read> }
                 
l.741     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:741: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:741: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing \cr inserted.
<inserted text> 
                \cr 
l.741     \end{align*}
                      
I'm guessing that you meant to end an alignment here.

./sections/typecheck/soundness.tex:741: Missing { inserted.
<inserted text> 
                {
l.741     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:741: Missing { inserted.
<inserted text> 
                {
l.741     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:741: Extra }, or forgotten $.
<recently read> }
                 
l.741     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _a} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...igma _{I-n}(\widetilde {T})} \Infer 
                                                  0{\texttt {in}\in \sigma }...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...r 0{\texttt {in}\in \sigma } \Infer 
                                                  0{\pi _P} \Infer 1{\varphi...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...in \sigma } \Infer 0{\pi _P} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...ash P \triangleleft \kappa } \Infer 
                                                  3{\varphi ;\Phi ;\downarro...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...iangleleft \kappa + (I - n)} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/soundness.tex:741: LaTeX Error: \begin{align*} on input li
ne 706 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.741     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.741     \end{align*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.


Overfull \hbox (126.16852pt too wide) detected at line 741
\OT1/cmr/m/n/10.95 1[]0[]0[]1[]3[]1[]
 []

./sections/typecheck/soundness.tex:741: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.741     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:741: Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.741     \end{align*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:741: Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.741     \end{align*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:741: Misplaced \cr.
\measure@ ...olumn@ \z@ \add@amps \maxfields@ \cr 
                                                  }}\restorecounters@ \ifodd...
l.741     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:741: Too many }'s.
\measure@ ...lumn@ \z@ \add@amps \maxfields@ \cr }
                                                  }\restorecounters@ \ifodd ...
l.741     \end{align*}
                      
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

./sections/typecheck/soundness.tex:741: Too many }'s.
\measure@ ...umn@ \z@ \add@amps \maxfields@ \cr }}
                                                  \restorecounters@ \ifodd \...
l.741     \end{align*}
                      
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

./sections/typecheck/soundness.tex:741: Missing number, treated as zero.
<to be read again> 
                   =
l.741     \end{align*}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/soundness.tex:741: Missing number, treated as zero.
<to be read again> 
                   \global 
l.741     \end{align*}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/soundness.tex:741: Extra \endgroup.
\measure@ ...aywidth@ \displaywidth \fi \endgroup 
                                                  
l.741     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/soundness.tex:741: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.741     \end{align*}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _a
./sections/typecheck/soundness.tex:741: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.741     \end{align*}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/soundness.tex:741: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.741     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:741: Extra }, or forgotten $.
<recently read> }
                 
l.741     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:741: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:741: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing \cr inserted.
<inserted text> 
                \cr 
l.741     \end{align*}
                      
I'm guessing that you meant to end an alignment here.

./sections/typecheck/soundness.tex:741: Missing { inserted.
<inserted text> 
                {
l.741     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:741: Missing { inserted.
<inserted text> 
                {
l.741     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:741: Extra }, or forgotten $.
<recently read> }
                 
l.741     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Extra \endgroup.
<recently read> \group_end: 
                            
l.741     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _a} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:741: Extra }, or forgotten $.
<argument> ... {ch}^\sigma _{I-n}(\widetilde {T})}
                                                   \Infer 0{\texttt {in}\in ...
l.741     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...igma _{I-n}(\widetilde {T})} \Infer 
                                                  0{\texttt {in}\in \sigma }...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...r 0{\texttt {in}\in \sigma } \Infer 
                                                  0{\pi _P} \Infer 1{\varphi...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...in \sigma } \Infer 0{\pi _P} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...ash P \triangleleft \kappa } \Infer 
                                                  3{\varphi ;\Phi ;\downarro...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:741: Undefined control sequence.
<argument> ...iangleleft \kappa + (I - n)} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.741     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/soundness.tex:741: LaTeX Error: \begin{document} ended by 
\end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.741     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Missing } inserted.
<inserted text> 
                }
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Extra \endgroup.
<recently read> \endgroup 
                          
l.741     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/soundness.tex:741: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.741     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:741: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.741     \end{align*}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (125.23776pt too wide) in paragraph at lines 741--741
[]\T1/ptm/m/n/10.95 (-20) 1$\OML/cmm/m/it/10.95 '\OT1/cmr/m/n/10.95 ; ^^H; \OMS
/cmsy/m/n/10.95 #[]   \OT1/cmr/m/n/10.95 ^^@ \OMS/cmsy/m/n/10.95 ` \OML/cmm/m/i
t/10.95 a \OT1/cmr/m/n/10.95 : [][]([])0[]0[]1[]3[]1[]$ 
 []

./sections/typecheck/soundness.tex:741: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.741     \end{align*}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/typecheck/soundness.tex:741: Too many }'s.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.741     \end{align*}
                      
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/typecheck/soundness.tex:741: LaTeX Error: \begin{document} ended by 
\end{align*}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.741     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:741: Missing $ inserted.
<inserted text> 
                $
l.741     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:741: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.741     \end{align*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[40]
./sections/typecheck/soundness.tex:741: Extra \endgroup.
<recently read> \endgroup 
                          
l.741     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.


LaTeX Warning: Reference `lemma:substibg' on page 41 undefined on input line 74
3.


LaTeX Warning: Reference `lemma:delayingg' on page 41 undefined on input line 7
43.


LaTeX Warning: Reference `lemma:basisdefer' on page 41 undefined on input line 
743.


Overfull \hbox (4.97377pt too wide) in paragraph at lines 741--744
\T1/ptm/m/n/10.95 (-20) Thus, the whole pro-cess re-ceives the bound $[]\OT1/cm
r/m/n/10.95 (\OML/cmm/m/it/10.95 '; \OT1/cmr/m/n/10.95 ^^H\OML/cmm/m/it/10.95 ;
 \OT1/cmr/m/n/10.95 (\OML/cmm/m/it/10.95 ^^T \OT1/cmr/m/n/10.95 + \OML/cmm/m/it
/10.95 I\OT1/cmr/m/n/10.95 ) \OMS/cmsy/m/n/10.95 [ f\OML/cmm/m/it/10.95 I\OMS/c
msy/m/n/10.95 g\OT1/cmr/m/n/10.95 )$\T1/ptm/m/n/10.95 (-20) . By ap-pli-ca-tion
 of $[]$
 []


./sections/typecheck/soundness.tex:752: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.752     \item[$\runa{PR-par}$]
                                 We have the reduction $P \mid R \Longrighta...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 752
[][]
 []


LaTeX Warning: Reference `lemma:basisdefer' on page 41 undefined on input line 
752.


./sections/typecheck/soundness.tex:756: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.756     \item[$\runa{PR-zero}$]
                                  We have the reduction $\match{0}{P}{x}{Q} ...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 756
[][]
 []


LaTeX Warning: Reference `lemma:strengthening' on page 41 undefined on input li
ne 756.


LaTeX Warning: Reference `lemma:basisdefer' on page 41 undefined on input line 
756.


./sections/typecheck/soundness.tex:759: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.759     \item[$\runa{PR-succ}$]
                                  We have the reduction $\match{\succc{e}}{P...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 759
[][]
 []

./sections/typecheck/soundness.tex:774: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.774     \end{align*}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _e
./sections/typecheck/soundness.tex:774: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.774     \end{align*}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/soundness.tex:774: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.774     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:774: Extra }, or forgotten $.
<recently read> }
                 
l.774     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:774: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:774: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.774     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing \cr inserted.
<inserted text> 
                \cr 
l.774     \end{align*}
                      
I'm guessing that you meant to end an alignment here.

./sections/typecheck/soundness.tex:774: Missing { inserted.
<inserted text> 
                {
l.774     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:774: Missing { inserted.
<inserted text> 
                {
l.774     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:774: Extra }, or forgotten $.
<recently read> }
                 
l.774     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _e} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.774     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:774: Undefined control sequence.
<argument> ...sh e : \texttt {Nat}[I',J']} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.774     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:774: Undefined control sequence.
<argument> ... : \texttt {Nat}[I'+1,J'+1]} \Infer 
                                                  0{\varphi ;\Phi \vdash \te...
l.774     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:774: Undefined control sequence.
<argument> ...subseteq \texttt {Nat}[I,J]} \Infer 
                                                  2{\varphi ;\Phi ;\Gamma \v...
l.774     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/soundness.tex:774: LaTeX Error: \begin{align*} on input li
ne 760 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.774     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.774     \end{align*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.


Overfull \hbox (126.76367pt too wide) detected at line 774
\OT1/cmr/m/n/10.95 1[]1[]0[]2[]
 []

./sections/typecheck/soundness.tex:774: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.774     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:774: Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.774     \end{align*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:774: Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.774     \end{align*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:774: Misplaced \cr.
\measure@ ...olumn@ \z@ \add@amps \maxfields@ \cr 
                                                  }}\restorecounters@ \ifodd...
l.774     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:774: Too many }'s.
\measure@ ...lumn@ \z@ \add@amps \maxfields@ \cr }
                                                  }\restorecounters@ \ifodd ...
l.774     \end{align*}
                      
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

./sections/typecheck/soundness.tex:774: Too many }'s.
\measure@ ...umn@ \z@ \add@amps \maxfields@ \cr }}
                                                  \restorecounters@ \ifodd \...
l.774     \end{align*}
                      
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

./sections/typecheck/soundness.tex:774: Missing number, treated as zero.
<to be read again> 
                   =
l.774     \end{align*}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/soundness.tex:774: Missing number, treated as zero.
<to be read again> 
                   \global 
l.774     \end{align*}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/soundness.tex:774: Extra \endgroup.
\measure@ ...aywidth@ \displaywidth \fi \endgroup 
                                                  
l.774     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/soundness.tex:774: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.774     \end{align*}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _e
./sections/typecheck/soundness.tex:774: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.774     \end{align*}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/soundness.tex:774: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.774     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:774: Extra }, or forgotten $.
<recently read> }
                 
l.774     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:774: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:774: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.774     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing \cr inserted.
<inserted text> 
                \cr 
l.774     \end{align*}
                      
I'm guessing that you meant to end an alignment here.

./sections/typecheck/soundness.tex:774: Missing { inserted.
<inserted text> 
                {
l.774     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:774: Missing { inserted.
<inserted text> 
                {
l.774     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:774: Extra }, or forgotten $.
<recently read> }
                 
l.774     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Extra \endgroup.
<recently read> \group_end: 
                            
l.774     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/soundness.tex:774: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _e} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.774     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:774: Extra }, or forgotten $.
<argument> ...mma \vdash e : \texttt {Nat}[I',J']}
                                                   \Infer 1{\varphi ;\Phi ;\...
l.774     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:774: Undefined control sequence.
<argument> ...sh e : \texttt {Nat}[I',J']} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.774     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:774: Undefined control sequence.
<argument> ... : \texttt {Nat}[I'+1,J'+1]} \Infer 
                                                  0{\varphi ;\Phi \vdash \te...
l.774     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:774: Undefined control sequence.
<argument> ...subseteq \texttt {Nat}[I,J]} \Infer 
                                                  2{\varphi ;\Phi ;\Gamma \v...
l.774     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/soundness.tex:774: LaTeX Error: \begin{document} ended by 
\end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.774     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Missing } inserted.
<inserted text> 
                }
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Extra \endgroup.
<recently read> \endgroup 
                          
l.774     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/soundness.tex:774: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.774     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:774: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.774     \end{align*}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (125.83292pt too wide) in paragraph at lines 774--774
[]\T1/ptm/m/n/10.95 (-20) 1$\OML/cmm/m/it/10.95 '\OT1/cmr/m/n/10.95 ; ^^H; ^^@ 
\OMS/cmsy/m/n/10.95 ` \OML/cmm/m/it/10.95 e \OT1/cmr/m/n/10.95 : [][\OML/cmm/m/
it/10.95 I[]; J[]\OT1/cmr/m/n/10.95 ]1[]0[]2[]$ 
 []

./sections/typecheck/soundness.tex:774: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.774     \end{align*}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/typecheck/soundness.tex:774: Too many }'s.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.774     \end{align*}
                      
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/typecheck/soundness.tex:774: LaTeX Error: \begin{document} ended by 
\end{align*}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.774     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:774: Missing $ inserted.
<inserted text> 
                $
l.774     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:774: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.774     \end{align*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/typecheck/soundness.tex:774: Extra \endgroup.
<recently read> \endgroup 
                          
l.774     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.


LaTeX Warning: Reference `lemma:strengthening' on page 41 undefined on input li
ne 775.


LaTeX Warning: Reference `lemma:substibg' on page 41 undefined on input line 77
5.


LaTeX Warning: Reference `lemma:basisdefer' on page 41 undefined on input line 
775.


./sections/typecheck/soundness.tex:778: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.778     \item[$\runa{PR-annot}$]
                                   We have the reduction $n : P \Longrightar...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 778
[][]
 []

[41]

./sections/typecheck/soundness.tex:790: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.790     \item[$\runa{PR-res}$]
                                 We have the reduction $\newvar{a : T}{P} \L...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 790
[][]
 []


./sections/typecheck/soundness.tex:792: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.792     \item[$\runa{PR-struct}$]
                                    We have the reduction $P \Longrightarrow...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 792
[][]
 []


LaTeX Warning: Reference `lemma:scbg' on page 42 undefined on input line 792.


LaTeX Warning: Reference `lemma:scbg' on page 42 undefined on input line 792.


./sections/typecheck/soundness.tex:794: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.794     \item[$\runa{PR-tick}$]
                                  We have the reduction $\tick P \Longrighta...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 794
[][]
 []


./sections/typecheck/soundness.tex:796: LaTeX Error: \begin{document} ended by 
\end{description}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.796     \end{description}
                           
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:796: Extra \endgroup.
<recently read> \endgroup 
                          
l.796     \end{description}
                           
Things are pretty mixed up, but I think the worst is over.


./sections/typecheck/soundness.tex:797: LaTeX Error: \begin{document} ended by 
\end{proof}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.797 \end{proof}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:797: Extra \endgroup.
<recently read> \endgroup 
                          
l.797 \end{proof}
                 
Things are pretty mixed up, but I think the worst is over.


./sections/typecheck/soundness.tex:798: LaTeX Error: \begin{document} ended by 
\end{theorem}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.798 \end{theorem}
                   
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:798: Extra \endgroup.
<recently read> \endgroup 
                          
l.798 \end{theorem}
                   
Things are pretty mixed up, but I think the worst is over.


LaTeX Warning: Reference `lemma:localcompl' on page 42 undefined on input line 
802.


LaTeX Warning: Reference `lemma:basisdefer' on page 42 undefined on input line 
802.


LaTeX Warning: Reference `theorem:bpcbg' on page 42 undefined on input line 802
.


LaTeX Warning: Reference `lemma:anncannform' on page 42 undefined on input line
 806.


LaTeX Warning: Reference `lemma:scbg' on page 42 undefined on input line 806.

./sections/typecheck/soundness.tex:818: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.818     \end{align*}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\varphi ;\Phi ;\Gamma ,\widetilde {a}:\widetilde {T}\vdash m_1 : G_1 \ETC.
./sections/typecheck/soundness.tex:818: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.818     \end{align*}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/soundness.tex:818: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.818     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:818: Extra }, or forgotten $.
<recently read> }
                 
l.818     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:818: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:818: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.818     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing \cr inserted.
<inserted text> 
                \cr 
l.818     \end{align*}
                      
I'm guessing that you meant to end an alignment here.

./sections/typecheck/soundness.tex:818: Missing { inserted.
<inserted text> 
                {
l.818     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:818: Missing { inserted.
<inserted text> 
                {
l.818     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:818: Extra }, or forgotten $.
<recently read> }
                 
l.818     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Undefined control sequence.
<argument> ...G_n \triangleleft \kappa _n} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma ,\...
l.818     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:818: Undefined control sequence.
<argument> ... G_n \triangleleft \kappa '} \Infer 
                                                  1{\vdots } \Infer 1{\varph...
l.818     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:818: Undefined control sequence.
<argument> ... \kappa '} \Infer 1{\vdots } \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.818     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/soundness.tex:818: LaTeX Error: \begin{align*} on input li
ne 808 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.818     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.818     \end{align*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/typecheck/soundness.tex:818: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.818     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:818: Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.818     \end{align*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:818: Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.818     \end{align*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:818: Misplaced \cr.
\measure@ ...olumn@ \z@ \add@amps \maxfields@ \cr 
                                                  }}\restorecounters@ \ifodd...
l.818     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:818: Extra }, or forgotten \endgroup.
\measure@ ...lumn@ \z@ \add@amps \maxfields@ \cr }
                                                  }\restorecounters@ \ifodd ...
l.818     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:818: Extra }, or forgotten \endgroup.
\measure@ ...umn@ \z@ \add@amps \maxfields@ \cr }}
                                                  \restorecounters@ \ifodd \...
l.818     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:818: Missing number, treated as zero.
<to be read again> 
                   =
l.818     \end{align*}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/soundness.tex:818: Missing number, treated as zero.
<to be read again> 
                   \global 
l.818     \end{align*}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/soundness.tex:818: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.818     \end{align*}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\varphi ;\Phi ;\Gamma ,\widetilde {a}:\widetilde {T}\vdash m_1 : G_1 \ETC.
./sections/typecheck/soundness.tex:818: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.818     \end{align*}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/soundness.tex:818: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.818     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:818: Extra }, or forgotten $.
<recently read> }
                 
l.818     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:818: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:818: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.818     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing \cr inserted.
<inserted text> 
                \cr 
l.818     \end{align*}
                      
I'm guessing that you meant to end an alignment here.

./sections/typecheck/soundness.tex:818: Missing { inserted.
<inserted text> 
                {
l.818     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:818: Missing { inserted.
<inserted text> 
                {
l.818     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/soundness.tex:818: Extra }, or forgotten $.
<recently read> }
                 
l.818     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Undefined control sequence.
<argument> ...G_n \triangleleft \kappa _n} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma ,\...
l.818     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/soundness.tex:818: Extra }, or forgotten $.
<recently read> }
                 
l.818     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/soundness.tex:818: Undefined control sequence.
<argument> ... G_n \triangleleft \kappa '} \Infer 
                                                  1{\vdots } \Infer 1{\varph...
l.818     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/soundness.tex:818: Undefined control sequence.
<argument> ... \kappa '} \Infer 1{\vdots } \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.818     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/soundness.tex:818: LaTeX Error: \begin{document} ended by 
\end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.818     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Missing } inserted.
<inserted text> 
                }
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Extra \endgroup.
<recently read> \endgroup 
                          
l.818     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/soundness.tex:818: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.818     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/soundness.tex:818: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.818     \end{align*}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/typecheck/soundness.tex:818: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.818     \end{align*}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/typecheck/soundness.tex:818: Too many }'s.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.818     \end{align*}
                      
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/typecheck/soundness.tex:818: LaTeX Error: \begin{document} ended by 
\end{align*}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.818     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:818: Missing $ inserted.
<inserted text> 
                $
l.818     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/soundness.tex:818: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.818     \end{align*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/typecheck/soundness.tex:818: Extra \endgroup.
<recently read> \endgroup 
                          
l.818     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.


LaTeX Warning: Reference `lemma:basisdefer' on page 42 undefined on input line 
820.


./sections/typecheck/soundness.tex:883: LaTeX Error: \begin{document} ended by 
\end{proof}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.883 \end{proof}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:883: Extra \endgroup.
<recently read> \endgroup 
                          
l.883 \end{proof}
                 
Things are pretty mixed up, but I think the worst is over.


./sections/typecheck/soundness.tex:884: LaTeX Error: \begin{document} ended by 
\end{lemma}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.884 \end{lemma}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/soundness.tex:884: Extra \endgroup.
<recently read> \endgroup 
                          
l.884 \end{lemma}
                 
Things are pretty mixed up, but I think the worst is over.

[42]

LaTeX Warning: Reference `lemma:localcompl' on page 43 undefined on input line 
890.


LaTeX Warning: Reference `theorem:srbg' on page 43 undefined on input line 890.



LaTeX Warning: Reference `lemma:cpwt' on page 43 undefined on input line 894.

) (./sections/typecheck/verifying_linear_judgements.tex

LaTeX Warning: Citation `BaillotGhyselen2021' on page 43 undefined on input lin
e 2.


LaTeX Warning: Reference `ch:bgts' on page 43 undefined on input line 5.


Underfull \hbox (badness 10000) in paragraph at lines 5--6

 []


LaTeX Warning: Reference `def:partialmonus' on page 43 undefined on input line 
7.

[43] [44] (./sections/typecheck/indices_undecidability_polynomial.tex

LaTeX Warning: Citation `Hilbert1902' on page 45 undefined on input line 2.


LaTeX Warning: Citation `Davis1973' on page 45 undefined on input line 2.


LaTeX Warning: Reference `lemma:judgementUndecidable' on page 45 undefined on i
nput line 2.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 45 undefined on input lin
e 7.

[45]
Overfull \hbox (40.07368pt too wide) detected at line 28
[]
 []


LaTeX Warning: Reference `lemma:judgementUndecidable' on page 46 undefined on i
nput line 44.

)

LaTeX Warning: Reference `def:normlinindex' on page 46 undefined on input line 
76.

[46]

LaTeX Warning: Reference `def:operationsmodule' on page 47 undefined on input l
ine 89.


LaTeX Warning: Reference `def:normalizationindex' on page 47 undefined on input
 line 89.

[47]

LaTeX Warning: Reference `def:normconst' on page 48 undefined on input line 155
.


LaTeX Warning: Reference `sec:cjalternativeform' on page 48 undefined on input 
line 192.


Underfull \hbox (badness 10000) in paragraph at lines 192--193

 []


Underfull \hbox (badness 10000) in paragraph at lines 194--195

 []


Underfull \hbox (badness 10000) in paragraph at lines 196--197

 []

[48]
Underfull \hbox (badness 10000) in paragraph at lines 203--205

 []


Underfull \hbox (badness 10000) in paragraph at lines 212--214

 []


Underfull \vbox (badness 5893) has occurred while \output is active []

 [49]
Underfull \hbox (badness 10000) in paragraph at lines 260--261

 []

) (./sections/typecheck/verifying_polynomial_judgements.tex
Underfull \hbox (badness 10000) in paragraph at lines 7--10

 []

[50]
Underfull \hbox (badness 10000) in paragraph at lines 11--12

 []


LaTeX Warning: Citation `abelruffinitheorem' on page 51 undefined on input line
 13.


Underfull \hbox (badness 10000) in paragraph at lines 13--14

 []


Underfull \hbox (badness 10000) in paragraph at lines 15--16

 []

[51]

LaTeX Warning: Citation `BaillotGhyselen2021' on page 52 undefined on input lin
e 29.


Underfull \hbox (badness 10000) in paragraph at lines 29--30

 []


LaTeX Warning: Reference `example:baillotghyssimple' on page 52 undefined on in
put line 31.


LaTeX Warning: Citation `BaillotGhyselen2021' on page 52 undefined on input lin
e 34.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 37.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 37.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 37.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 37.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 37.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 37.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 37.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 37.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 42.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 50.

[52]) (./sections/typecheck/verifying_univariate_judgements.tex)
(./sections/typecheck/examples.tex
Underfull \hbox (badness 10000) in paragraph at lines 3--4

 []


Underfull \hbox (badness 10000) in paragraph at lines 5--6

 []

[53]
Underfull \hbox (badness 10000) in paragraph at lines 10--13

 []


Overfull \hbox (13.19357pt too wide) in paragraph at lines 14--16
\OML/cmm/m/it/10.95 e[] [] P [] Q$ \T1/ptm/m/n/10.95 (-20) and a con-struc-tor 
that splits a list into two equal-sized sub-lists $[] \OML/cmm/m/it/10.95 e [] 
\OT1/cmr/m/n/10.95 (\OML/cmm/m/it/10.95 x; y\OT1/cmr/m/n/10.95 ) \OMS/cmsy/m/n/
10.95 7!
 []


Overfull \hbox (167.55692pt too wide) detected at line 22
[] 
 []


Overfull \hbox (167.55692pt too wide) detected at line 22
[] 
 []


Overfull \hbox (158.57762pt too wide) detected at line 31
[] 
 []


Overfull \hbox (158.57762pt too wide) detected at line 31
[] 
 []


Overfull \hbox (172.93887pt too wide) detected at line 39
[] 
 []


Overfull \hbox (172.93887pt too wide) detected at line 39
[] 
 []


Underfull \hbox (badness 10000) in paragraph at lines 39--50

 []

[54]

LaTeX Font Warning: Command \tiny invalid in math mode on input line 92.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 92.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 92.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 92.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 92.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 92.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 92.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 92.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 112.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 112.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 112.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 112.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 112.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 112.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 112.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 112.

./sections/typecheck/examples.tex:142: Argument of \ebproof_statement_parse:w h
as an extra }.
<inserted text> 
                \par 
l.142 \end{align*}
                  }
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
 \begin {matrix} \varphi ;(\Phi ,n\leq m);\downarrow _{i+j}\!\!\Delta \ETC.
./sections/typecheck/examples.tex:142: Paragraph ended before \ebproof_statemen
t_parse:w was complete.
<to be read again> 
                   \par 
l.142 \end{align*}
                  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/examples.tex:142: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.142 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:142: Extra }, or forgotten $.
<recently read> }
                 
l.142 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:142: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:142: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing \cr inserted.
<inserted text> 
                \cr 
l.142 \end{align*}
                  }
I'm guessing that you meant to end an alignment here.

./sections/typecheck/examples.tex:142: Missing { inserted.
<inserted text> 
                {
l.142 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/examples.tex:142: Missing { inserted.
<inserted text> 
                {
l.142 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/examples.tex:142: Extra }, or forgotten $.
<recently read> }
                 
l.142 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...)\{(i-1)/i\} \end {matrix} } \Infer 
                                                  1{ \varphi ;(\Phi ,n\leq m...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...gleleft \{i+j\}\{(i-1)/i\} } \Infer 
                                                  0{ \varphi ;(\Phi ,n\leq m...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...,i+j](\texttt {Nat}[k,l])) } \Infer 
                                                  1{ \varphi ;(\Phi ,n\leq m...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...rangle \triangleleft \{0\} } \Infer 
                                                  1{\varphi ;(\Phi ,n\leq m)...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...le \triangleleft \{i+j-1\} } \Infer 
                                                  2{\varphi ;(\Phi ,n\leq m)...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...le \triangleleft \{i+j-1\} } \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ... \triangleleft \{i+j - 1\} } \Infer 
                                                  1{\varphi ;\Phi ;\Delta \v...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...e \; \triangleleft \{i+j\}}} \Infer 
                                                  1{\vdots } \Infer 1{\cdot ...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ... \{i+j\}}} \Infer 1{\vdots } \Infer 
                                                  1{\cdot ;\cdot ;\Gamma _{\...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/examples.tex:142: LaTeX Error: \begin{align*} on input lin
e 118 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.142 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.142 \end{align*}
                  }
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.


Overfull \hbox (1357.49666pt too wide) detected at line 142
\OT1/cmr/m/n/7 1[]0[]1[]1[]2[]1[]1[]1[]1[]
 []

[55]
./sections/typecheck/examples.tex:142: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.142 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/examples.tex:142: Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.142 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/examples.tex:142: Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.142 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/examples.tex:142: Misplaced \cr.
\measure@ ...olumn@ \z@ \add@amps \maxfields@ \cr 
                                                  }}\restorecounters@ \ifodd...
l.142 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/examples.tex:142: Too many }'s.
\measure@ ...umn@ \z@ \add@amps \maxfields@ \cr }}
                                                  \restorecounters@ \ifodd \...
l.142 \end{align*}
                  }
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

./sections/typecheck/examples.tex:142: Missing number, treated as zero.
<to be read again> 
                   =
l.142 \end{align*}
                  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/examples.tex:142: Missing number, treated as zero.
<to be read again> 
                   \global 
l.142 \end{align*}
                  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/examples.tex:142: Extra \endgroup.
\measure@ ...aywidth@ \displaywidth \fi \endgroup 
                                                  
l.142 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/examples.tex:142: Argument of \ebproof_statement_parse:w h
as an extra }.
<inserted text> 
                \par 
l.142 \end{align*}
                  }
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
 \begin {matrix} \varphi ;(\Phi ,n\leq m);\downarrow _{i+j}\!\!\Delta \ETC.
./sections/typecheck/examples.tex:142: Paragraph ended before \ebproof_statemen
t_parse:w was complete.
<to be read again> 
                   \par 
l.142 \end{align*}
                  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/examples.tex:142: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.142 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:142: Extra }, or forgotten $.
<recently read> }
                 
l.142 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:142: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:142: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing \cr inserted.
<inserted text> 
                \cr 
l.142 \end{align*}
                  }
I'm guessing that you meant to end an alignment here.

./sections/typecheck/examples.tex:142: Missing { inserted.
<inserted text> 
                {
l.142 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/examples.tex:142: Missing { inserted.
<inserted text> 
                {
l.142 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/examples.tex:142: Extra }, or forgotten $.
<recently read> }
                 
l.142 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Extra \endgroup.
<recently read> \group_end: 
                            
l.142 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...)\{(i-1)/i\} \end {matrix} } \Infer 
                                                  1{ \varphi ;(\Phi ,n\leq m...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:142: Extra }, or forgotten $.
<argument> ...e \triangleleft \{i+j\}\{(i-1)/i\} }
                                                   \Infer 0{ \varphi ;(\Phi ...
l.142 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...gleleft \{i+j\}\{(i-1)/i\} } \Infer 
                                                  0{ \varphi ;(\Phi ,n\leq m...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...,i+j](\texttt {Nat}[k,l])) } \Infer 
                                                  1{ \varphi ;(\Phi ,n\leq m...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...rangle \triangleleft \{0\} } \Infer 
                                                  1{\varphi ;(\Phi ,n\leq m)...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...le \triangleleft \{i+j-1\} } \Infer 
                                                  2{\varphi ;(\Phi ,n\leq m)...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...le \triangleleft \{i+j-1\} } \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ... \triangleleft \{i+j - 1\} } \Infer 
                                                  1{\varphi ;\Phi ;\Delta \v...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ...e \; \triangleleft \{i+j\}}} \Infer 
                                                  1{\vdots } \Infer 1{\cdot ...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:142: Undefined control sequence.
<argument> ... \{i+j\}}} \Infer 1{\vdots } \Infer 
                                                  1{\cdot ;\cdot ;\Gamma _{\...
l.142 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/examples.tex:142: LaTeX Error: \begin{document} ended by \
end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.142 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Missing } inserted.
<inserted text> 
                }
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Extra \endgroup.
<recently read> \endgroup 
                          
l.142 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/examples.tex:142: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.142 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/examples.tex:142: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.142 \end{align*}
                  }
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (1998.36098pt too wide) in paragraph at lines 142--142
[]\T1/ptm/m/n/10.95 (-20) 1 $\OML/cmm/m/it/10.95 '\OT1/cmr/m/n/10.95 ; (^^H\OML
/cmm/m/it/10.95 ; n \OMS/cmsy/m/n/10.95 ^^T \OML/cmm/m/it/10.95 m\OT1/cmr/m/n/1
0.95 ); \OMS/cmsy/m/n/10.95 #[]   \OT1/cmr/m/n/10.95 ^^A \OMS/cmsy/m/n/10.95 ` 
[]h\OML/cmm/m/it/10.95 l[]; l[]; r[]\OMS/cmsy/m/n/10.95 i \OML/cmm/m/it/10.95 /
 \OMS/cmsy/m/n/10.95 f\OML/cmm/m/it/10.95 i \OT1/cmr/m/n/10.95 + \OML/cmm/m/it/
10.95 j\OMS/cmsy/m/n/10.95 gf\OT1/cmr/m/n/10.95 (\OML/cmm/m/it/10.95 i \OMS/cms
y/m/n/10.95 ^^@ \OT1/cmr/m/n/10.95 1)\OML/cmm/m/it/10.95 =i\OMS/cmsy/m/n/10.95 
g\OT1/cmr/m/n/10.95 0[]1[]1[]2[]1[]1[]1[]1[]$ 
 []

./sections/typecheck/examples.tex:142: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.142 \end{align*}
                  }
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/typecheck/examples.tex:142: Too many }'s.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.142 \end{align*}
                  }
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/typecheck/examples.tex:142: LaTeX Error: \begin{document} ended by \
end{align*}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.142 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/examples.tex:142: Missing $ inserted.
<inserted text> 
                $
l.142 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:142: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.142 \end{align*}
                  }
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/typecheck/examples.tex:142: Extra \endgroup.
<recently read> \endgroup 
                          
l.142 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/examples.tex:142: Too many }'s.
l.142 \end{align*}}
                   
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 194.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 194.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 194.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 194.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 194.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 194.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 194.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 194.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 208.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 215.

./sections/typecheck/examples.tex:252: Argument of \ebproof_statement_parse:w h
as an extra }.
<inserted text> 
                \par 
l.252 \end{align*}
                  }
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
 \begin {matrix} \varphi ;\cdot ;\Delta \vdash r_1 : \texttt {ch}^{\{\ETC.
./sections/typecheck/examples.tex:252: Paragraph ended before \ebproof_statemen
t_parse:w was complete.
<to be read again> 
                   \par 
l.252 \end{align*}
                  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/examples.tex:252: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.252 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:252: Extra }, or forgotten $.
<recently read> }
                 
l.252 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:252: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:252: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing \cr inserted.
<inserted text> 
                \cr 
l.252 \end{align*}
                  }
I'm guessing that you meant to end an alignment here.

./sections/typecheck/examples.tex:252: Missing { inserted.
<inserted text> 
                {
l.252 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/examples.tex:252: Missing { inserted.
<inserted text> 
                {
l.252 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/examples.tex:252: Extra }, or forgotten $.
<recently read> }
                 
l.252 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...)\{(i/2)/i\} \end {matrix} } \Infer 
                                                  1{\varphi ;\cdot ;\Delta \...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...angleleft \{2i\}\{(i/2)/i\}} \Infer 
                                                  0{\varphi ;\cdot ;\Delta '...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...,r_3}{} \triangleleft \{i\}} \Infer 
                                                  0{ \varphi ;\cdot ;\Delta ...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...l'}{}} \triangleleft \{0\} } \Infer 
                                                  1{\varphi ;\cdot ;\Delta '...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...l'}{}} \triangleleft \{i\} } \Infer 
                                                  2{\varphi ;\cdot ;\Delta '...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...l'}{}} \triangleleft \{i\} } \Infer 
                                                  1{\vdots } \Infer 1{\varph...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...ft \{i\} } \Infer 1{\vdots } \Infer 
                                                  1{\varphi ;\cdot ;\Delta \...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...}} \triangleleft \{i\} + i } \Infer 
                                                  2{\varphi ;\cdot ;\Delta \...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...})}}} \triangleleft \{2i\} } \Infer 
                                                  1{\vdots } \Infer 1{\varph...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...t \{2i\} } \Infer 1{\vdots } \Infer 
                                                  1{\varphi ;\cdot ;\Gamma _...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...} ) }} \triangleleft \{2i\}} \Infer 
                                                  1{\cdot ;\cdot ;\Gamma _{\...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/examples.tex:252: LaTeX Error: \begin{align*} on input lin
e 220 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.252 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.252 \end{align*}
                  }
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.


Overfull \hbox (1228.91185pt too wide) detected at line 252
\OT1/cmr/m/n/7 1[]0[]0[]1[]2[]1[]1[]2[]1[]1[]1[]
 []

./sections/typecheck/examples.tex:252: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.252 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/examples.tex:252: Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.252 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/examples.tex:252: Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.252 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/examples.tex:252: Misplaced \cr.
\measure@ ...olumn@ \z@ \add@amps \maxfields@ \cr 
                                                  }}\restorecounters@ \ifodd...
l.252 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/examples.tex:252: Too many }'s.
\measure@ ...umn@ \z@ \add@amps \maxfields@ \cr }}
                                                  \restorecounters@ \ifodd \...
l.252 \end{align*}
                  }
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

./sections/typecheck/examples.tex:252: Missing number, treated as zero.
<to be read again> 
                   =
l.252 \end{align*}
                  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/examples.tex:252: Missing number, treated as zero.
<to be read again> 
                   \global 
l.252 \end{align*}
                  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/typecheck/examples.tex:252: Extra \endgroup.
\measure@ ...aywidth@ \displaywidth \fi \endgroup 
                                                  
l.252 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/examples.tex:252: Argument of \ebproof_statement_parse:w h
as an extra }.
<inserted text> 
                \par 
l.252 \end{align*}
                  }
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
 \begin {matrix} \varphi ;\cdot ;\Delta \vdash r_1 : \texttt {ch}^{\{\ETC.
./sections/typecheck/examples.tex:252: Paragraph ended before \ebproof_statemen
t_parse:w was complete.
<to be read again> 
                   \par 
l.252 \end{align*}
                  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/typecheck/examples.tex:252: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.252 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:252: Extra }, or forgotten $.
<recently read> }
                 
l.252 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:252: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:252: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing \cr inserted.
<inserted text> 
                \cr 
l.252 \end{align*}
                  }
I'm guessing that you meant to end an alignment here.

./sections/typecheck/examples.tex:252: Missing { inserted.
<inserted text> 
                {
l.252 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/examples.tex:252: Missing { inserted.
<inserted text> 
                {
l.252 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/typecheck/examples.tex:252: Extra }, or forgotten $.
<recently read> }
                 
l.252 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Extra \endgroup.
<recently read> \group_end: 
                            
l.252 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...)\{(i/2)/i\} \end {matrix} } \Infer 
                                                  1{\varphi ;\cdot ;\Delta \...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[56]
./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/typecheck/examples.tex:252: Extra }, or forgotten $.
<argument> ...}{} \triangleleft \{2i\}\{(i/2)/i\}}
                                                   \Infer 0{\varphi ;\cdot ;...
l.252 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...angleleft \{2i\}\{(i/2)/i\}} \Infer 
                                                  0{\varphi ;\cdot ;\Delta '...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...,r_3}{} \triangleleft \{i\}} \Infer 
                                                  0{ \varphi ;\cdot ;\Delta ...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...l'}{}} \triangleleft \{0\} } \Infer 
                                                  1{\varphi ;\cdot ;\Delta '...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...l'}{}} \triangleleft \{i\} } \Infer 
                                                  2{\varphi ;\cdot ;\Delta '...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...l'}{}} \triangleleft \{i\} } \Infer 
                                                  1{\vdots } \Infer 1{\varph...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...ft \{i\} } \Infer 1{\vdots } \Infer 
                                                  1{\varphi ;\cdot ;\Delta \...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...}} \triangleleft \{i\} + i } \Infer 
                                                  2{\varphi ;\cdot ;\Delta \...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...})}}} \triangleleft \{2i\} } \Infer 
                                                  1{\vdots } \Infer 1{\varph...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...t \{2i\} } \Infer 1{\vdots } \Infer 
                                                  1{\varphi ;\cdot ;\Gamma _...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/typecheck/examples.tex:252: Undefined control sequence.
<argument> ...} ) }} \triangleleft \{2i\}} \Infer 
                                                  1{\cdot ;\cdot ;\Gamma _{\...
l.252 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/typecheck/examples.tex:252: LaTeX Error: \begin{document} ended by \
end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.252 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Missing } inserted.
<inserted text> 
                }
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Extra \endgroup.
<recently read> \endgroup 
                          
l.252 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/examples.tex:252: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.252 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/typecheck/examples.tex:252: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.252 \end{align*}
                  }
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (1795.92406pt too wide) in paragraph at lines 252--252
[]\T1/ptm/m/n/10.95 (-20) 1$\OML/cmm/m/it/10.95 '\OT1/cmr/m/n/10.95 ; \OMS/cmsy
/m/n/10.95 ^^A\OT1/cmr/m/n/10.95 ; ^^A \OMS/cmsy/m/n/10.95 ` [] h\OML/cmm/m/it/
10.95 l[]; r[]\OMS/cmsy/m/n/10.95 i[] \OML/cmm/m/it/10.95 / \OMS/cmsy/m/n/10.95
 f\OT1/cmr/m/n/10.95 2\OML/cmm/m/it/10.95 i\OMS/cmsy/m/n/10.95 gf\OT1/cmr/m/n/1
0.95 (\OML/cmm/m/it/10.95 i=\OT1/cmr/m/n/10.95 2)\OML/cmm/m/it/10.95 =i\OMS/cms
y/m/n/10.95 g\OT1/cmr/m/n/10.95 0[]0[]1[]2[]1[]1[]2[]1[]1[]1[]$ 
 []

./sections/typecheck/examples.tex:252: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.252 \end{align*}
                  }
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/typecheck/examples.tex:252: Too many }'s.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.252 \end{align*}
                  }
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/typecheck/examples.tex:252: LaTeX Error: \begin{document} ended by \
end{align*}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.252 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/typecheck/examples.tex:252: Missing $ inserted.
<inserted text> 
                $
l.252 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/typecheck/examples.tex:252: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.252 \end{align*}
                  }
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/typecheck/examples.tex:252: Extra \endgroup.
<recently read> \endgroup 
                          
l.252 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/typecheck/examples.tex:252: Too many }'s.
l.252 \end{align*}}
                   
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

)) (./sections/timeinference/intro.tex [57] [58

]

LaTeX Warning: Reference `ch:bgts' on page 59 undefined on input line 3.


LaTeX Warning: Citation `HofmannAndJost2003' on page 59 undefined on input line
 3.


LaTeX Warning: Citation `HofmannAndHoffmann2010' on page 59 undefined on input 
line 3.


LaTeX Warning: Citation `HoffmannEtAl2012' on page 59 undefined on input line 3
.


LaTeX Warning: Citation `KobayashiEtAl2000' on page 59 undefined on input line 
3.


LaTeX Warning: Citation `Kobayashi2005' on page 59 undefined on input line 3.


LaTeX Warning: Reference `ch:bgts' on page 59 undefined on input line 6.


LaTeX Warning: Reference `sec:tcsoundness' on page 59 undefined on input line 6
.


Overfull \hbox (88.72342pt too wide) detected at line 9
[] 
 []


Overfull \hbox (88.72342pt too wide) detected at line 9
[] 
 []

[59]

LaTeX Warning: Reference `tab:bgprocesstypingrules' on page 60 undefined on inp
ut line 18.


Underfull \hbox (badness 10000) in paragraph at lines 17--19

 []


Underfull \hbox (badness 10000) in paragraph at lines 21--22

 []


Underfull \hbox (badness 10000) in paragraph at lines 40--43

 []


Underfull \hbox (badness 10000) in paragraph at lines 44--45

 []

[60]
Underfull \hbox (badness 10000) in paragraph at lines 46--47

 []


LaTeX Warning: Reference `sec:redcons' on page 61 undefined on input line 48.


LaTeX Warning: Reference `sec:solvcons' on page 61 undefined on input line 48.


Underfull \hbox (badness 10000) in paragraph at lines 48--49

 []


LaTeX Warning: Reference `def:constraintexten' on page 61 undefined on input li
ne 50.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 69.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 73.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 73.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 73.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 73.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 73.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 73.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 73.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 73.


LaTeX Warning: Reference `def:timetagget' on page 61 undefined on input line 76
.

[61]

LaTeX Warning: Reference `def:principaltyping' on page 62 undefined on input li
ne 86.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 107.

[62]
Underfull \hbox (badness 10000) in paragraph at lines 174--175

 []


LaTeX Warning: Citation `HofmannAndJost2003' on page 63 undefined on input line
 176.


LaTeX Warning: Citation `HofmannAndHoffmann2010' on page 63 undefined on input 
line 176.


LaTeX Warning: Citation `HoffmannEtAl2012' on page 63 undefined on input line 1
76.


LaTeX Warning: Reference `def:freshfun' on page 63 undefined on input line 176.


[63]
Overfull \hbox (37.21312pt too wide) detected at line 192
[]
 []


LaTeX Warning: Reference `tab:inferencerulesexp' on page 64 undefined on input 
line 220.


Underfull \hbox (badness 10000) in paragraph at lines 220--221

 []


Overfull \hbox (67.57906pt too wide) detected at line 230
[][] 
 []


Overfull \hbox (109.78584pt too wide) detected at line 230
[][] 
 []


Overfull \hbox (233.01283pt too wide) detected at line 230
[][] 
 []


Overfull \hbox (67.57906pt too wide) detected at line 230
[][] 
 []


Overfull \hbox (109.78584pt too wide) detected at line 230
[][] 
 []


Overfull \hbox (233.01283pt too wide) detected at line 230
[][] 
 []


LaTeX Warning: Reference `tab:inferencerules1' on page 64 undefined on input li
ne 236.


LaTeX Warning: Reference `tab:inferencerules2' on page 64 undefined on input li
ne 236.


LaTeX Warning: Reference `tab:bgprocesstypingrules' on page 64 undefined on inp
ut line 236.


Underfull \hbox (badness 10000) in paragraph at lines 236--237

 []


LaTeX Warning: Reference `ch:typecheck' on page 64 undefined on input line 238.



Overfull \hbox (35.75403pt too wide) detected at line 279
[] 
 []


Overfull \hbox (81.5635pt too wide) detected at line 279
[] 
 []


Overfull \hbox (96.84137pt too wide) detected at line 279
[] 
 []


Overfull \hbox (6.12827pt too wide) detected at line 279
[] 
 []


Overfull \hbox (287.62656pt too wide) detected at line 279
[] 
 []


Overfull \hbox (35.75403pt too wide) detected at line 279
[] 
 []


Overfull \hbox (81.5635pt too wide) detected at line 279
[] 
 []


Overfull \hbox (96.84137pt too wide) detected at line 279
[] 
 []


Overfull \hbox (6.12827pt too wide) detected at line 279
[] 
 []


Overfull \hbox (287.62656pt too wide) detected at line 279
[] 
 []


Overfull \hbox (21.26175pt too wide) detected at line 279
[]
 []

[64]

LaTeX Warning: Reference `examp:consinferr' on page 65 undefined on input line 
285.


Underfull \hbox (badness 10000) in paragraph at lines 285--286

 []

[65]
Overfull \hbox (230.52258pt too wide) detected at line 350
[] 
 []


Overfull \hbox (174.82692pt too wide) detected at line 350
[] 
 []


Overfull \hbox (198.39856pt too wide) detected at line 350
[] 
 []


Overfull \hbox (147.8998pt too wide) detected at line 350
[] 
 []


Overfull \hbox (230.52258pt too wide) detected at line 350
[] 
 []


Overfull \hbox (174.82692pt too wide) detected at line 350
[] 
 []


Overfull \hbox (198.39856pt too wide) detected at line 350
[] 
 []


Overfull \hbox (147.8998pt too wide) detected at line 350
[] 
 []


LaTeX Warning: Reference `sec:simpletypeinf' on page 66 undefined on input line
 357.


LaTeX Warning: Reference `tab:inferencerulesinv' on page 66 undefined on input 
line 520.


Underfull \hbox (badness 10000) in paragraph at lines 520--521

 []

[66]
Underfull \vbox (badness 10000) has occurred while \output is active []

 [67]

LaTeX Warning: Reference `tab:inferencerulesss' on page 68 undefined on input l
ine 537.


Underfull \hbox (badness 10000) in paragraph at lines 537--538

 []


Overfull \hbox (67.70587pt too wide) detected at line 594
[]
 []


LaTeX Warning: Reference `tab:inferencerulessim' on page 68 undefined on input 
line 604.


LaTeX Warning: Reference `examp:consredu' on page 68 undefined on input line 60
4.


Underfull \hbox (badness 10000) in paragraph at lines 604--605

 []


Overfull \hbox (49.21236pt too wide) detected at line 631
[]
 []

[68]

LaTeX Warning: Citation `IgarashiKobayashi2000' on page 69 undefined on input l
ine 716.


Underfull \hbox (badness 10000) in paragraph at lines 716--717

 []


LaTeX Warning: Reference `alg:ioalgsolv' on page 69 undefined on input line 718
.

[69]

LaTeX Warning: Reference `lemma:remconsok' on page 70 undefined on input line 7
60.

[70]
Underfull \hbox (badness 10000) in paragraph at lines 772--774

 []


Overfull \hbox (150.37054pt too wide) detected at line 787
[] 
 []


Overfull \hbox (150.37054pt too wide) detected at line 787
[] 
 []


LaTeX Warning: Citation `BaillotGhyselen2021' on page 71 undefined on input lin
e 788.

[71]

LaTeX Warning: Citation `Z3' on page 72 undefined on input line 802.


Underfull \hbox (badness 10000) in paragraph at lines 802--803

 []


Underfull \hbox (badness 10000) in paragraph at lines 804--805

 []

[72]

LaTeX Warning: Reference `app:runningexm' on page 73 undefined on input line 80
6.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 819.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 819.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 819.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 819.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 819.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 819.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 819.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 819.


Overfull \hbox (28.23297pt too wide) detected at line 819
[]
 []


LaTeX Font Warning: Command \tiny invalid in math mode on input line 831.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 831.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 831.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 831.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 831.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 831.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 831.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 831.


Underfull \hbox (badness 10000) in paragraph at lines 808--833

 []


LaTeX Font Warning: Command \tiny invalid in math mode on input line 841.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 841.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 841.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 841.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 841.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 841.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 841.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 841.


LaTeX Warning: Reference `ch:bgts' on page 73 undefined on input line 842.

) (./sections/conclusion.tex [73] [74

]

LaTeX Warning: Citation `BaillotGhyselen2021' on page 75 undefined on input lin
e 2.


Underfull \hbox (badness 10000) in paragraph at lines 5--6

 []


Underfull \hbox (badness 10000) in paragraph at lines 7--8

 []


Underfull \hbox (badness 10000) in paragraph at lines 15--16

 []

[75]
Underfull \hbox (badness 10000) in paragraph at lines 17--18

 []


Underfull \hbox (badness 10000) in paragraph at lines 19--20

 []


LaTeX Warning: Citation `BaillotGhyselen2021' on page 76 undefined on input lin
e 35.


Underfull \hbox (badness 10000) in paragraph at lines 35--36

 []


LaTeX Warning: Citation `HofmannAndHoffmann2010' on page 76 undefined on input 
line 37.


LaTeX Warning: Citation `HoffmannEtAl2012' on page 76 undefined on input line 3
7.


Underfull \hbox (badness 10000) in paragraph at lines 37--38

 []

[76]
Underfull \hbox (badness 10000) in paragraph at lines 39--40

 []


LaTeX Warning: Citation `BaillotGhyselen2021' on page 77 undefined on input lin
e 43.


LaTeX Warning: Citation `BaillotEtAl2021' on page 77 undefined on input line 43
.


LaTeX Warning: Citation `KobayashiEtAl2000' on page 77 undefined on input line 
43.


LaTeX Warning: Citation `Kobayashi2005' on page 77 undefined on input line 43.

)
No file master.bbl.
(./sections/appendix/soundness1.tex [77] [78

]pdfTeX warning (ext4): destination with the same identifier (name{theorem.11})
 has been already used, duplicate ignored
<to be read again> 
                   \relax 
l.6 L
     et $\Phi$ be a set of constraints with unknowns in $\varphi$ and let $T...
LaTeX Font Info:    Font shape `T1/pcr/bx/n' in size <10.95> not available
(Font)              Font shape `T1/pcr/b/n' tried instead on input line 9.

Overfull \hbox (3.4417pt too wide) in paragraph at lines 9--11
[]\T1/ptm/m/n/10.95 (-20) obtained di-rectly from $\OMS/cmsy/m/n/10.95 #[]   \O
T1/cmr/m/n/10.95 ([][\OML/cmm/m/it/10.95 K; L\OT1/cmr/m/n/10.95 ]) = [][\OML/cm
m/m/it/10.95 K; L\OT1/cmr/m/n/10.95 ]$ \T1/ptm/m/n/10.95 (-20) and $\OMS/cmsy/m
/n/10.95 #[]   \OT1/cmr/m/n/10.95 ([][\OML/cmm/m/it/10.95 K; L\OT1/cmr/m/n/10.9
5 ]) =
 []

[79]pdfTeX warning (ext4): destination with the same identifier (name{theorem.1
7}) has been already used, duplicate ignored
<to be read again> 
                   \relax 
l.51 \begin{lemma}[Substitution]\text{ }
                                        

LaTeX Warning: Reference `lemma:susumedefer' on page 80 undefined on input line
 80.


LaTeX Warning: Reference `lemma:weakening' on page 80 undefined on input line 8
2.


LaTeX Warning: Reference `lemma:weakening' on page 80 undefined on input line 8
6.


LaTeX Warning: Reference `lemma:susumedefer' on page 80 undefined on input line
 88.


LaTeX Warning: Reference `lemma:weakening' on page 80 undefined on input line 8
8.

[80]

LaTeX Warning: Reference `lemma:susumedefer' on page 81 undefined on input line
 90.


LaTeX Warning: Reference `lemma:weakening' on page 81 undefined on input line 9
0.


LaTeX Warning: Reference `lemma:susumedefer' on page 81 undefined on input line
 92.


LaTeX Warning: Reference `lemma:susumedefer' on page 81 undefined on input line
 94.


LaTeX Warning: Reference `lemma:basisdefer' on page 81 undefined on input line 
96.

pdfTeX warning (ext4): destination with the same identifier (name{theorem.18}) 
has been already used, duplicate ignored
<to be read again> 
                   \relax 
l.105 L
       et $P$ and $Q$ be processes such that $P\equiv Q$ then $\varphi;\Phi;...

LaTeX Warning: Reference `lemma:basisdefer' on page 81 undefined on input line 
108.

./sections/appendix/soundness1.tex:146: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.146     \end{align*}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _P
./sections/appendix/soundness1.tex:146: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.146     \end{align*}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/appendix/soundness1.tex:146: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.146     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:146: Extra }, or forgotten $.
<recently read> }
                 
l.146     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:146: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:146: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing \cr inserted.
<inserted text> 
                \cr 
l.146     \end{align*}
                      
I'm guessing that you meant to end an alignment here.

./sections/appendix/soundness1.tex:146: Missing { inserted.
<inserted text> 
                {
l.146     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:146: Missing { inserted.
<inserted text> 
                {
l.146     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:146: Extra }, or forgotten $.
<recently read> }
                 
l.146     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _P} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...ash P \triangleleft \kappa } \Infer 
                                                  0{\pi _Q} \Infer 1{\varphi...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...ft \kappa } \Infer 0{\pi _Q} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...sh Q \triangleleft \kappa '} \Infer 
                                                  0{\pi _R} \Infer 1{\varphi...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...t \kappa '} \Infer 0{\pi _R} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...h R \triangleleft \kappa ''} \Infer 
                                                  2{\varphi ;\Phi ;\Gamma \v...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...hi ,\kappa '\cup \kappa '')} \Infer 
                                                  2{\varphi ;\Phi ;\Gamma \v...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/appendix/soundness1.tex:146: LaTeX Error: \begin{align*} on input li
ne 114 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.146     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.146     \end{align*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.


Overfull \hbox (291.44507pt too wide) detected at line 146
\OT1/cmr/m/n/10.95 1[]0[]1[]0[]1[]2[]2[]
 []

[81]
./sections/appendix/soundness1.tex:146: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.146     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:146: Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.146     \end{align*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:146: Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.146     \end{align*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:146: Misplaced \cr.
\measure@ ...olumn@ \z@ \add@amps \maxfields@ \cr 
                                                  }}\restorecounters@ \ifodd...
l.146     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:146: Extra }, or forgotten \endgroup.
\measure@ ...lumn@ \z@ \add@amps \maxfields@ \cr }
                                                  }\restorecounters@ \ifodd ...
l.146     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:146: Extra }, or forgotten \endgroup.
\measure@ ...umn@ \z@ \add@amps \maxfields@ \cr }}
                                                  \restorecounters@ \ifodd \...
l.146     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:146: Missing number, treated as zero.
<to be read again> 
                   =
l.146     \end{align*}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/appendix/soundness1.tex:146: Missing number, treated as zero.
<to be read again> 
                   \global 
l.146     \end{align*}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)


Underfull \hbox (badness 10000) in paragraph at lines 146--146

 []

./sections/appendix/soundness1.tex:146: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.146     \end{align*}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _P
./sections/appendix/soundness1.tex:146: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.146     \end{align*}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/appendix/soundness1.tex:146: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.146     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:146: Extra }, or forgotten $.
<recently read> }
                 
l.146     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:146: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:146: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing \cr inserted.
<inserted text> 
                \cr 
l.146     \end{align*}
                      
I'm guessing that you meant to end an alignment here.

./sections/appendix/soundness1.tex:146: Missing { inserted.
<inserted text> 
                {
l.146     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:146: Missing { inserted.
<inserted text> 
                {
l.146     \end{align*}
                      
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:146: Extra }, or forgotten $.
<recently read> }
                 
l.146     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _P} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:146: Extra }, or forgotten $.
<argument> ...amma \vdash P \triangleleft \kappa }
                                                   \Infer 0{\pi _Q} \Infer 1...
l.146     \end{align*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...ash P \triangleleft \kappa } \Infer 
                                                  0{\pi _Q} \Infer 1{\varphi...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...ft \kappa } \Infer 0{\pi _Q} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...sh Q \triangleleft \kappa '} \Infer 
                                                  0{\pi _R} \Infer 1{\varphi...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...t \kappa '} \Infer 0{\pi _R} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...h R \triangleleft \kappa ''} \Infer 
                                                  2{\varphi ;\Phi ;\Gamma \v...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:146: Undefined control sequence.
<argument> ...hi ,\kappa '\cup \kappa '')} \Infer 
                                                  2{\varphi ;\Phi ;\Gamma \v...
l.146     \end{align*}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/appendix/soundness1.tex:146: LaTeX Error: \begin{lemma} on input lin
e 104 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.146     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Missing } inserted.
<inserted text> 
                }
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.146     \end{align*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:146: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.146     \end{align*}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (260.11247pt too wide) in paragraph at lines 146--146
[]\T1/ptm/m/it/10.95 (-20) 1$\OML/cmm/m/it/10.95 '\OT1/cmr/m/n/10.95 ; ^^H; ^^@
 \OMS/cmsy/m/n/10.95 ` \OML/cmm/m/it/10.95 P / ^^T\OT1/cmr/m/n/10.95 0[]1[]0[]1
[]2[]2[]$ 
 []


Underfull \hbox (badness 10000) in paragraph at lines 146--146

 []

./sections/appendix/soundness1.tex:146: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.146     \end{align*}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/appendix/soundness1.tex:146: Too many }'s.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.146     \end{align*}
                      
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/appendix/soundness1.tex:146: LaTeX Error: \begin{document} ended by 
\end{align*}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.146     \end{align*}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:146: Missing $ inserted.
<inserted text> 
                $
l.146     \end{align*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:146: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.146     \end{align*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/appendix/soundness1.tex:146: Extra \endgroup.
<recently read> \endgroup 
                          
l.146     \end{align*}
                      
Things are pretty mixed up, but I think the worst is over.


LaTeX Warning: Reference `lemma:basisdefer' on page 82 undefined on input line 
147.


./sections/appendix/soundness1.tex:149: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.149 \item[$\runa{SC-scope}$]
                               We have that $\newvar{a}{(P \mid Q)} \equiv \...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 149
[][]
 []


LaTeX Warning: Reference `lemma:strengthening' on page 82 undefined on input li
ne 151.


LaTeX Warning: Reference `lemma:weakening' on page 82 undefined on input line 1
53.


./sections/appendix/soundness1.tex:156: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.156 \item[$\runa{SC-par}$]
                             We have that $P\mid Q \equiv P' \mid Q$ with $P...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 156
[][]
 []


./sections/appendix/soundness1.tex:158: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.158 \item[$\runa{SC-res}$]
                             We have that $\newvar{a}{P} \equiv \newvar{a}{Q...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 158
[][]
 []


./sections/appendix/soundness1.tex:160: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.160 \item[$\runa{SC-zero}$]
                              This result is obtained directly from $\susume...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 160
[][]
 []


./sections/appendix/soundness1.tex:162: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.162 \item[$\runa{SC-sum}$]
                             We have that $n : m : P \equiv n+m : P$, and so...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 162
[][]
 []


LaTeX Warning: Reference `lemma:addsusume' on page 82 undefined on input line 1
62.

[82]

./sections/appendix/soundness1.tex:164: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.164 \item[$\runa{SC-dis}$]
                             We have that $n : (P \mid Q) \equiv (n : P) \mi...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 164
[][]
 []

./sections/appendix/soundness1.tex:190: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.190 \end{align*}
                  }
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _P
./sections/appendix/soundness1.tex:190: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.190 \end{align*}
                  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/appendix/soundness1.tex:190: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.190 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:190: Extra }, or forgotten $.
<recently read> }
                 
l.190 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:190: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:190: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing \cr inserted.
<inserted text> 
                \cr 
l.190 \end{align*}
                  }
I'm guessing that you meant to end an alignment here.

./sections/appendix/soundness1.tex:190: Missing { inserted.
<inserted text> 
                {
l.190 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:190: Missing { inserted.
<inserted text> 
                {
l.190 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:190: Extra }, or forgotten $.
<recently read> }
                 
l.190 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _P} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
<argument> ...ash P \triangleleft \kappa } \Infer 
                                                  0{\pi _Q} \Infer 1{\varphi...
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
<argument> ...ft \kappa } \Infer 0{\pi _Q} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
<argument> ...sh Q \triangleleft \kappa '} \Infer 
                                                  2{\varphi ;\Phi ;\downarro...
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
<argument> ...\Phi ,\kappa \cup \kappa ')} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/appendix/soundness1.tex:190: LaTeX Error: \begin{align*} on input li
ne 166 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.190 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.190 \end{align*}
                  }
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.


Overfull \hbox (82.18842pt too wide) detected at line 190
\OT1/cmr/m/n/10 1[]0[]1[]2[]1[]
 []

./sections/appendix/soundness1.tex:190: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.190 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:190: Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.190 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:190: Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.190 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:190: Misplaced \cr.
\measure@ ...olumn@ \z@ \add@amps \maxfields@ \cr 
                                                  }}\restorecounters@ \ifodd...
l.190 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:190: Too many }'s.
\measure@ ...umn@ \z@ \add@amps \maxfields@ \cr }}
                                                  \restorecounters@ \ifodd \...
l.190 \end{align*}
                  }
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

./sections/appendix/soundness1.tex:190: Missing number, treated as zero.
<to be read again> 
                   =
l.190 \end{align*}
                  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/appendix/soundness1.tex:190: Missing number, treated as zero.
<to be read again> 
                   \global 
l.190 \end{align*}
                  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/appendix/soundness1.tex:190: Extra \endgroup.
\measure@ ...aywidth@ \displaywidth \fi \endgroup 
                                                  
l.190 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/appendix/soundness1.tex:190: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.190 \end{align*}
                  }
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _P
./sections/appendix/soundness1.tex:190: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.190 \end{align*}
                  }
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/appendix/soundness1.tex:190: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.190 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:190: Extra }, or forgotten $.
<recently read> }
                 
l.190 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:190: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:190: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing \cr inserted.
<inserted text> 
                \cr 
l.190 \end{align*}
                  }
I'm guessing that you meant to end an alignment here.

./sections/appendix/soundness1.tex:190: Missing { inserted.
<inserted text> 
                {
l.190 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:190: Missing { inserted.
<inserted text> 
                {
l.190 \end{align*}
                  }
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:190: Extra }, or forgotten $.
<recently read> }
                 
l.190 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Extra \endgroup.
<recently read> \group_end: 
                            
l.190 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _P} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:190: Extra }, or forgotten $.
<argument> ...amma \vdash P \triangleleft \kappa }
                                                   \Infer 0{\pi _Q} \Infer 1...
l.190 \end{align*}
                  }
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
<argument> ...ash P \triangleleft \kappa } \Infer 
                                                  0{\pi _Q} \Infer 1{\varphi...
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
<argument> ...ft \kappa } \Infer 0{\pi _Q} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
<argument> ...sh Q \triangleleft \kappa '} \Infer 
                                                  2{\varphi ;\Phi ;\downarro...
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:190: Undefined control sequence.
<argument> ...\Phi ,\kappa \cup \kappa ')} \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.190 \end{align*}
                  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/appendix/soundness1.tex:190: LaTeX Error: \begin{document} ended by 
\end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.190 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Missing } inserted.
<inserted text> 
                }
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Extra \endgroup.
<recently read> \endgroup 
                          
l.190 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/appendix/soundness1.tex:190: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.190 \end{align*}
                  }
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:190: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.190 \end{align*}
                  }
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (125.48099pt too wide) in paragraph at lines 190--190
[]\T1/ptm/m/n/10.95 (-20) 1$\OML/cmm/m/it/10.95 '\OT1/cmr/m/n/10.95 ; ^^H; \OMS
/cmsy/m/n/10.95 #[]   \OT1/cmr/m/n/10.95 ^^@ \OMS/cmsy/m/n/10.95 ` \OML/cmm/m/i
t/10.95 P / ^^T\OT1/cmr/m/n/10.95 0[]1[]2[]1[]$
 []

./sections/appendix/soundness1.tex:190: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.190 \end{align*}
                  }
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/appendix/soundness1.tex:190: Too many }'s.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.190 \end{align*}
                  }
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/appendix/soundness1.tex:190: LaTeX Error: \begin{document} ended by 
\end{align*}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.190 \end{align*}
                  }
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:190: Missing $ inserted.
<inserted text> 
                $
l.190 \end{align*}
                  }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:190: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.190 \end{align*}
                  }
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/appendix/soundness1.tex:190: Extra \endgroup.
<recently read> \endgroup 
                          
l.190 \end{align*}
                  }
Things are pretty mixed up, but I think the worst is over.

./sections/appendix/soundness1.tex:190: Too many }'s.
l.190 \end{align*}}
                   
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


LaTeX Warning: Reference `lemma:basisdefer' on page 83 undefined on input line 
191.


./sections/appendix/soundness1.tex:193: LaTeX Error: Lonely \item--perhaps a mi
ssing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.193 \item[$\runa{SC-ares}$]
                              We have that $n : \newvar{a}{P} \equiv \newvar...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


Underfull \hbox (badness 10000) detected at line 193
[][]
 []

./sections/appendix/soundness1.tex:208: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.208 \end{align*}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _P
./sections/appendix/soundness1.tex:208: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.208 \end{align*}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/appendix/soundness1.tex:208: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.208 \end{align*}
                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:208: Extra }, or forgotten $.
<recently read> }
                 
l.208 \end{align*}
                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:208: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:208: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.208 \end{align*}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing \cr inserted.
<inserted text> 
                \cr 
l.208 \end{align*}
                  
I'm guessing that you meant to end an alignment here.

./sections/appendix/soundness1.tex:208: Missing { inserted.
<inserted text> 
                {
l.208 \end{align*}
                  
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:208: Missing { inserted.
<inserted text> 
                {
l.208 \end{align*}
                  
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:208: Extra }, or forgotten $.
<recently read> }
                 
l.208 \end{align*}
                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _P} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.208 \end{align*}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:208: Undefined control sequence.
<argument> ...ash P \triangleleft \kappa } \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.208 \end{align*}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:208: Undefined control sequence.
<argument> ...a}{P} \triangleleft \kappa } \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.208 \end{align*}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/appendix/soundness1.tex:208: LaTeX Error: \begin{align*} on input li
ne 194 ended by \end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.208 \end{align*}
                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.208 \end{align*}
                  
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/appendix/soundness1.tex:208: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.208 \end{align*}
                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:208: Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.208 \end{align*}
                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:208: Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.208 \end{align*}
                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:208: Misplaced \cr.
\measure@ ...olumn@ \z@ \add@amps \maxfields@ \cr 
                                                  }}\restorecounters@ \ifodd...
l.208 \end{align*}
                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:208: Too many }'s.
\measure@ ...lumn@ \z@ \add@amps \maxfields@ \cr }
                                                  }\restorecounters@ \ifodd ...
l.208 \end{align*}
                  
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

./sections/appendix/soundness1.tex:208: Too many }'s.
\measure@ ...umn@ \z@ \add@amps \maxfields@ \cr }}
                                                  \restorecounters@ \ifodd \...
l.208 \end{align*}
                  
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

./sections/appendix/soundness1.tex:208: Missing number, treated as zero.
<to be read again> 
                   =
l.208 \end{align*}
                  
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/appendix/soundness1.tex:208: Missing number, treated as zero.
<to be read again> 
                   \global 
l.208 \end{align*}
                  
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

./sections/appendix/soundness1.tex:208: Extra \endgroup.
\measure@ ...aywidth@ \displaywidth \fi \endgroup 
                                                  
l.208 \end{align*}
                  
Things are pretty mixed up, but I think the worst is over.

./sections/appendix/soundness1.tex:208: Argument of \ebproof_statement_parse:w 
has an extra }.
<inserted text> 
                \par 
l.208 \end{align*}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\pi _P
./sections/appendix/soundness1.tex:208: Paragraph ended before \ebproof_stateme
nt_parse:w was complete.
<to be read again> 
                   \par 
l.208 \end{align*}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./sections/appendix/soundness1.tex:208: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.208 \end{align*}
                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:208: Extra }, or forgotten $.
<recently read> }
                 
l.208 \end{align*}
                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:208: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:208: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Undefined control sequence.
\ebproof_push_statement:n ...roof_statement_stop: 
                                                  
l.208 \end{align*}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing \cr inserted.
<inserted text> 
                \cr 
l.208 \end{align*}
                  
I'm guessing that you meant to end an alignment here.

./sections/appendix/soundness1.tex:208: Missing { inserted.
<inserted text> 
                {
l.208 \end{align*}
                  
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:208: Missing { inserted.
<inserted text> 
                {
l.208 \end{align*}
                  
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

./sections/appendix/soundness1.tex:208: Extra }, or forgotten $.
<recently read> }
                 
l.208 \end{align*}
                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Extra \endgroup.
<recently read> \group_end: 
                            
l.208 \end{align*}
                  
Things are pretty mixed up, but I think the worst is over.

./sections/appendix/soundness1.tex:208: Undefined control sequence.
<argument> ...{prooftree} \Infer 0{\pi _P} \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.208 \end{align*}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./sections/appendix/soundness1.tex:208: Extra }, or forgotten $.
<argument> ... ,a:T\vdash P \triangleleft \kappa }
                                                   \Infer 1{\varphi ;\Phi ;\...
l.208 \end{align*}
                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./sections/appendix/soundness1.tex:208: Undefined control sequence.
<argument> ...ash P \triangleleft \kappa } \Infer 
                                                  1{\varphi ;\Phi ;\downarro...
l.208 \end{align*}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./sections/appendix/soundness1.tex:208: Undefined control sequence.
<argument> ...a}{P} \triangleleft \kappa } \Infer 
                                                  1{\varphi ;\Phi ;\Gamma \v...
l.208 \end{align*}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


./sections/appendix/soundness1.tex:208: LaTeX Error: \begin{document} ended by 
\end{prooftree}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.208 \end{align*}
                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Missing } inserted.
<inserted text> 
                }
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Extra \endgroup.
<recently read> \endgroup 
                          
l.208 \end{align*}
                  
Things are pretty mixed up, but I think the worst is over.

./sections/appendix/soundness1.tex:208: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.208 \end{align*}
                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./sections/appendix/soundness1.tex:208: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.208 \end{align*}
                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (43.69627pt too wide) in paragraph at lines 208--208
[]\T1/ptm/m/n/10.95 (-20) 1$\OML/cmm/m/it/10.95 '\OT1/cmr/m/n/10.95 ; ^^H; \OMS
/cmsy/m/n/10.95 #[]   \OT1/cmr/m/n/10.95 ^^@\OML/cmm/m/it/10.95 ; a \OT1/cmr/m/
n/10.95 : \OML/cmm/m/it/10.95 T \OMS/cmsy/m/n/10.95 ` \OML/cmm/m/it/10.95 P / ^
^T\OT1/cmr/m/n/10.95 1[]1[]$ [] 
 []

./sections/appendix/soundness1.tex:208: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.208 \end{align*}
                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./sections/appendix/soundness1.tex:208: Too many }'s.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.208 \end{align*}
                  
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.


./sections/appendix/soundness1.tex:208: LaTeX Error: \begin{document} ended by 
\end{align*}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.208 \end{align*}
                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:208: Missing $ inserted.
<inserted text> 
                $
l.208 \end{align*}
                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./sections/appendix/soundness1.tex:208: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.208 \end{align*}
                  
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./sections/appendix/soundness1.tex:208: Extra \endgroup.
<recently read> \endgroup 
                          
l.208 \end{align*}
                  
Things are pretty mixed up, but I think the worst is over.


LaTeX Warning: Reference `lemma:delayingg' on page 83 undefined on input line 2
09.


./sections/appendix/soundness1.tex:210: LaTeX Error: \begin{document} ended by 
\end{description}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.210 \end{description}
                       
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:210: Extra \endgroup.
<recently read> \endgroup 
                          
l.210 \end{description}
                       
Things are pretty mixed up, but I think the worst is over.


./sections/appendix/soundness1.tex:211: LaTeX Error: \begin{document} ended by 
\end{proof}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.211 \end{proof}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:211: Extra \endgroup.
<recently read> \endgroup 
                          
l.211 \end{proof}
                 
Things are pretty mixed up, but I think the worst is over.


./sections/appendix/soundness1.tex:212: LaTeX Error: \begin{document} ended by 
\end{lemma}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.212 \end{lemma}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

./sections/appendix/soundness1.tex:212: Extra \endgroup.
<recently read> \endgroup 
                          
l.212 \end{lemma}
                 
Things are pretty mixed up, but I think the worst is over.

) (./sections/appendix/InferenceExample.tex [83] [84

]

LaTeX Font Warning: Command \tiny invalid in math mode on input line 14.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 14.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 14.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 14.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 14.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 14.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 14.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 14.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [85]
[86]
Overfull \vbox (11.847pt too high) has occurred while \output is active []


[87]
Underfull \hbox (badness 10000) in paragraph at lines 45--46

 []


Underfull \hbox (badness 10000) in paragraph at lines 47--50

 []


LaTeX Font Warning: Command \tiny invalid in math mode on input line 61.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 61.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 61.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 61.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 61.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 61.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 61.


LaTeX Font Warning: Command \tiny invalid in math mode on input line 61.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [88]
[89]
Underfull \vbox (badness 1838) has occurred while \output is active []

 [90]
Underfull \hbox (badness 10000) in paragraph at lines 84--85

 []

) [91]
\tf@toc=\write7
\openout7 = `master.toc'.

 (./master.aux)
Package atveryend Info: Executing hook `AtVeryEndDocument' on input line 367.
Package atveryend Info: Executing hook `AtEndAfterFileList' on input line 367.


Package rerunfilecheck Warning: File `master.out' has changed.
(rerunfilecheck)                Rerun to get outlines right
(rerunfilecheck)                or use package `bookmark'.

Package rerunfilecheck Info: Checksums for `master.out':
(rerunfilecheck)             Before: <no file>
(rerunfilecheck)             After:  2510409A6D6D157DA815C6160D813985;1946.

LaTeX Warning: There were undefined references.


LaTeX Warning: Label(s) may have changed. Rerun to get cross-references right.

 ) 
Here is how much of TeX's memory you used:
 46241 strings out of 492649
 1001929 string characters out of 6129622
 1272402 words of memory out of 5000000
 48798 multiletter control sequences out of 15000+600000
 660663 words of font info for 392 fonts, out of 8000000 for 9000
 1141 hyphenation exceptions out of 8191
 80i,24n,96p,10346b,2136s stack positions out of 5000i,500n,10000p,200000b,80000s
{/usr/local/texlive/2018/texmf-dist/fonts/enc/dvips/base/8r.enc}</usr/local/t
exlive/2018/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx10.pfb></usr/local/te
xlive/2018/texmf-dist/fonts/type1/public/amsfonts/cm/cmex10.pfb></usr/local/tex
live/2018/texmf-dist/fonts/type1/public/amsfonts/cmextra/cmex7.pfb></usr/local/
texlive/2018/texmf-dist/fonts/type1/public/amsfonts/cmextra/cmex8.pfb></usr/loc
al/texlive/2018/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb></usr/loca
l/texlive/2018/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi12.pfb></usr/local
/texlive/2018/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi5.pfb></usr/local/t
exlive/2018/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi6.pfb></usr/local/tex
live/2018/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi7.pfb></usr/local/texli
ve/2018/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi8.pfb></usr/local/texlive
/2018/texmf-dist/fonts/type1/public/amsfonts/cm/cmr10.pfb></usr/local/texlive/2
018/texmf-dist/fonts/type1/public/amsfonts/cm/cmr5.pfb></usr/local/texlive/2018
/texmf-dist/fonts/type1/public/amsfonts/cm/cmr6.pfb></usr/local/texlive/2018/te
xmf-dist/fonts/type1/public/amsfonts/cm/cmr7.pfb></usr/local/texlive/2018/texmf
-dist/fonts/type1/public/amsfonts/cm/cmr8.pfb></usr/local/texlive/2018/texmf-di
st/fonts/type1/public/amsfonts/cm/cmsy10.pfb></usr/local/texlive/2018/texmf-dis
t/fonts/type1/public/amsfonts/cm/cmsy5.pfb></usr/local/texlive/2018/texmf-dist/
fonts/type1/public/amsfonts/cm/cmsy6.pfb></usr/local/texlive/2018/texmf-dist/fo
nts/type1/public/amsfonts/cm/cmsy7.pfb></usr/local/texlive/2018/texmf-dist/font
s/type1/public/amsfonts/cm/cmsy8.pfb></usr/local/texlive/2018/texmf-dist/fonts/
type1/public/amsfonts/symbols/msam10.pfb></usr/local/texlive/2018/texmf-dist/fo
nts/type1/public/amsfonts/symbols/msam7.pfb></usr/local/texlive/2018/texmf-dist
/fonts/type1/public/amsfonts/symbols/msbm10.pfb></usr/local/texlive/2018/texmf-
dist/fonts/type1/public/stmaryrd/stmary10.pfb></usr/local/texlive/2018/texmf-di
st/fonts/type1/public/stmaryrd/stmary8.pfb></usr/local/texlive/2018/texmf-dist/
fonts/type1/urw/courier/ucrb8a.pfb></usr/local/texlive/2018/texmf-dist/fonts/ty
pe1/urw/courier/ucrr8a.pfb></usr/local/texlive/2018/texmf-dist/fonts/type1/urw/
helvetic/uhvb8a.pfb></usr/local/texlive/2018/texmf-dist/fonts/type1/urw/helveti
c/uhvro8a.pfb></usr/local/texlive/2018/texmf-dist/fonts/type1/urw/times/utmb8a.
pfb></usr/local/texlive/2018/texmf-dist/fonts/type1/urw/times/utmr8a.pfb></usr/
local/texlive/2018/texmf-dist/fonts/type1/urw/times/utmri8a.pfb>
Output written on master.pdf (91 pages, 625128 bytes).
PDF statistics:
 753 PDF objects out of 1000 (max. 8388607)
 621 compressed objects within 7 object streams
 259 named destinations out of 1000 (max. 500000)
 52237 words of extra memory for PDF output out of 61914 (max. 10000000)

